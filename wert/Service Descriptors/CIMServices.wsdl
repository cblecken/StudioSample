<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://www.tibco.com/cim/services/wfactivities/1.0" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="CIMservices" targetNamespace="http://www.tibco.com/cim/services/wfactivities/1.0">
	<wsdl:types>

		<xsd:schema targetNamespace="http://www.tibco.com/cim/services/wfactivities/1.0">
			<xsd:simpleType name="TypeType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="long"/>
					<xsd:enumeration value="boolean"/>
					<xsd:enumeration value="string"/>
					<xsd:enumeration value="arraylist"/>
					<xsd:enumeration value="recordlist"/>
					<xsd:enumeration value="document"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="Message"></xsd:complexType>
			<xsd:simpleType name="EvalType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="constant"/>
					<xsd:enumeration value="variable"/>
					<xsd:enumeration value="xpath"/>
					<xsd:enumeration value="rule"/>
					<xsd:enumeration value="lookup"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:simpleType name="ExecutionModeType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="SYNCHR"/>
					<xsd:enumeration value="ASYNCHR"/>
				</xsd:restriction>
			</xsd:simpleType>

			<!--  Base Types  -->
			<xsd:complexType name="BoolType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:boolean">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="LongType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:long">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="StringType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="RecordListType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="ArrayListType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:complexType name="DateType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:complexType name="TimestampType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:complexType name="FileType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<!-- Shared Parameters -->
			<xsd:complexType name="mlXMLDocumentType">
				<xsd:complexContent>
					<xsd:extension base="tns:Message">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:complexContent>
			</xsd:complexType>

			<xsd:complexType name="AsyncProcessIndicatorType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:boolean">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="VersionOptionValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="CONFIRMED"/>
					<xsd:enumeration value="LATEST"/>
					<xsd:enumeration value="ALL"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="VersionOptionType">
				<xsd:simpleContent>
					<xsd:extension base="tns:VersionOptionValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:simpleType name="VersionPolicyValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="New"/>
					<xsd:enumeration value="Correct"/>
					<xsd:enumeration value="Optimize"/>
				</xsd:restriction>
			</xsd:simpleType>
			
			<xsd:complexType name="VersionPolicyType">
				<xsd:simpleContent>
					<xsd:extension base="tns:VersionPolicyValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<!-- ManageWorkItem parameters and message types -->
			<xsd:simpleType name="WorkItemStatusValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="CANCELLED"/>
					<xsd:enumeration value="CLOSED"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="WorkItemStatusType">
				<xsd:simpleContent>
					<xsd:extension base="tns:WorkItemStatusValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="WorkItemActionValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="CLOSE"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="WorkItemActionType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="ReferenceStepIDType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:long">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="ManageWorkItemInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="WorkItemAction" type="tns:WorkItemActionType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="WorkItemStatus" type="tns:WorkItemStatusType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ReferenceStepID" type="tns:LongType" default="0"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="ManageWorkitemOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- UpdateRecordState parameters and message types -->
			<xsd:complexType name="OverrideConflictType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:boolean">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="ProductExtnsType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ArrayListType">
						
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="ProductIdsType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ArrayListType">
						
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="RecordKeyType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ArrayListType">
						
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="RecordPerAsyncCallType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:boolean">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="RelationshipMergeType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:boolean">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>


			<xsd:complexType name="StatusType">
				<xsd:simpleContent>
					<xsd:extension base="tns:StatusValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="CommandStatusOutValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Merged"/>
					<xsd:enumeration value="Overridden"/>
					<xsd:enumeration value="Normal"/>
					<xsd:enumeration value="ConflictResolutionRequired"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="CommandStatusOutType">
				<xsd:simpleContent>
					<xsd:extension base="tns:CommandStatusOutValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="UpdateRecordStateInputType">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="InDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element minOccurs="0" name="InRecordList" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="OverrideConflict" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element minOccurs="0" name="ProductExtns"
						type="tns:ArrayListType">
					</xsd:element>
					<xsd:element minOccurs="0" name="ProductIds"
						type="tns:ArrayListType">
					</xsd:element>
					<xsd:element minOccurs="0" name="RecordKey"
						type="tns:ArrayListType">
					</xsd:element>
					<xsd:element minOccurs="0" name="RecordPerAsyncCall"
						type="tns:LongType" default="20">
					</xsd:element>
					<xsd:element minOccurs="0" name="RelationshipMerge"
						type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element minOccurs="0" name="Status" type="tns:StatusType" maxOccurs="1" default="CONFIRMED">
					</xsd:element>
					<xsd:element minOccurs="0"
						name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="UpdateRecordStateOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="CommandStatus" type="tns:CommandStatusOutType"/>					
					<xsd:element maxOccurs="1" minOccurs="0" name="StepID" type="tns:LongType"/>
				</xsd:sequence>
			</xsd:complexType>

			<!-- UpdateEvent parameters and message types -->
			<xsd:simpleType name="EventStatusValueType">
				<xsd:restriction base="xsd:string">
				    <xsd:enumeration value=""/>
					<xsd:enumeration value="SUCCESS"/>
					<xsd:enumeration value="ERROR"/>
					<xsd:enumeration value="CANCELLED"/>
					<xsd:enumeration value="TIMEOUT"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="EventStatusType">
				<xsd:simpleContent>
					<xsd:extension base="tns:EventStatusValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="DeploymentModeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Production"/>
					<xsd:enumeration value="Test"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="deploymentModeType">
				<xsd:simpleContent>
					<xsd:extension base="xsd:string">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="UpdateEventInputType">
				<xsd:sequence>
					<xsd:element minOccurs="0" name="eventState"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="eventStatus"
						type="tns:EventStatusType" default="">
					</xsd:element>
					<xsd:element minOccurs="0"
						name="GlobalConversationID" type="tns:LongType">
					</xsd:element>
					<xsd:element minOccurs="0" name="eventType"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="eventDescriptor"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="deploymentMode"
						type="tns:deploymentModeType" default="PRODUCTION">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="UpdateEventOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- Send parameters and message types -->
			<xsd:simpleType name="ProtocolValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="SMTP"/>
					<xsd:enumeration value="FTP"/>
					<xsd:enumeration value="HTTP"/>
					<xsd:enumeration value="JMS"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="ProtocolType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ProtocolValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			<xsd:simpleType name="BizProtocolValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="JMS"/>
					<xsd:enumeration value="FTP"/>
					<xsd:enumeration value="SMTP"/>
					<xsd:enumeration value="Integration"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="BizProtocolType">
				<xsd:simpleContent>
					<xsd:extension base="tns:BizProtocolValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			<xsd:simpleType name="FutureDateValueType">
            	<xsd:restriction base="xsd:string">
					<xsd:enumeration value="I"/>
					<xsd:enumeration value="O"/>
					<xsd:enumeration value="N"/>
				</xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="FutureDateType">
            	<xsd:simpleContent>
					<xsd:extension base="tns:FutureDateValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
            </xsd:complexType>

			<xsd:complexType name="SendInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="Protocol" type="tns:ProtocolType">
					</xsd:element>
					<xsd:element minOccurs="0" name="Address"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="UserAddress"
						type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element minOccurs="0" name="Sender"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="Presentation"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="AttachDocument"
						type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element minOccurs="0" name="InAttachments"
						type="tns:mlXMLDocumentType" maxOccurs="unbounded">
					</xsd:element>
					<xsd:element minOccurs="0" name="InDocument"
						type="tns:mlXMLDocumentType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Subject" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="Form" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1"
						name="OperationStatus" type="tns:StringType" default="" />
					<xsd:element minOccurs="0" maxOccurs="1"
						name="Message" type="tns:StringType" default="" />

					<xsd:element name="WorkflowPriority"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>


					<xsd:element name="BuyerID" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="Username" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="Password" type="tns:StringType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="SendOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- EvaluateSubset parameters and message types -->
			<xsd:complexType name="EvaluateSubsetInputType">
				<xsd:sequence>
					<xsd:element minOccurs="1" name="InDocument"
						type="tns:mlXMLDocumentType" />
					<xsd:element minOccurs="0" maxOccurs="1"
						name="RelationshipName" type="tns:StringType" />
					<xsd:element minOccurs="0" name="Subset"
						type="tns:StringType" />
					<xsd:element minOccurs="0" name="MasterCatalog"
						type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" name="InRecordList"
						type="tns:RecordListType">
					</xsd:element>
					<xsd:element minOccurs="0" name="VersionOption"
						type="tns:VersionOptionType" default="CONFIRMED" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="FEDOption"
						type="tns:FutureDateType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="NamedVersionPrefix"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="IgnoreMetadataChange"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="FEDDate" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="EvaluateSubsetOutputType">
				<xsd:sequence>
					<xsd:element minOccurs="0" maxOccurs="1"
						name="OutRecordList" type="tns:RecordListType" />
					<xsd:element minOccurs="0" maxOccurs="1"
						name="RecordsProcessed" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="EvaluationTimestamp"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="EvaluationName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- Sample activity to test all input/output parameters and message types -->
			<xsd:complexType name="SampleInputType">
				<xsd:sequence>
					<xsd:element minOccurs="1" name="SampleDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element minOccurs="0" name="SampleString" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleLong" type="tns:LongType" default="0"/>
					<xsd:element minOccurs="0" name="SampleBoolean" type="tns:BoolType" default="false"/>
					<xsd:element minOccurs="0" name="SampleArrayList" type="tns:ArrayListType"/>
					<xsd:element minOccurs="0" name="SampleRecordList" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="SampleString2" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleLong2" type="tns:LongType" default="0"/>
					<xsd:element minOccurs="0" name="SampleBoolean2" type="tns:BoolType" default="false"/>
					<xsd:element minOccurs="0" name="SampleArrayList2" type="tns:ArrayListType"/>
					<xsd:element minOccurs="0" name="SampleRecordList2" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="SampleString3" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleLong3" type="tns:LongType" default="0"/>
					<xsd:element minOccurs="0" name="SampleBoolean3" type="tns:BoolType" default="false"/>
					<xsd:element minOccurs="0" name="SampleArrayList3" type="tns:ArrayListType"/>
					<xsd:element minOccurs="0" name="SampleRecordList3" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="SampleString4" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleString5" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="SampleOutputType">
				<xsd:sequence>
					<xsd:element minOccurs="1" name="SampleDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element minOccurs="0" name="SampleString" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleLong" type="tns:LongType"/>
					<xsd:element minOccurs="0" name="SampleBoolean" type="tns:BoolType"/>
					<xsd:element minOccurs="0" name="SampleArrayList" type="tns:ArrayListType"/>
					<xsd:element minOccurs="0" name="SampleRecordList" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="SampleString2" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleLong2" type="tns:LongType"/>
					<xsd:element minOccurs="0" name="SampleBoolean2" type="tns:BoolType"/>
					<xsd:element minOccurs="0" name="SampleArrayList2" type="tns:ArrayListType"/>
					<xsd:element minOccurs="0" name="SampleRecordList2" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="SampleString3" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleLong3" type="tns:LongType"/>
					<xsd:element minOccurs="0" name="SampleBoolean3" type="tns:BoolType"/>
					<xsd:element minOccurs="0" name="SampleArrayList3" type="tns:ArrayListType"/>
					<xsd:element minOccurs="0" name="SampleRecordList3" type="tns:RecordListType"/>
					<xsd:element minOccurs="0" name="SampleString4" type="tns:StringType"/>
					<xsd:element minOccurs="0" name="SampleString5" type="tns:StringType"/>
				</xsd:sequence>

			</xsd:complexType>

			<xsd:element name="ManageWorkItemInput" type="tns:ManageWorkItemInputType"/>
			<xsd:element name="ManageWorkItemOutput" type="tns:ManageWorkitemOutputType"/>
			<xsd:element name="UpdateRecordStateInput" type="tns:UpdateRecordStateInputType"/>
			<xsd:element name="UpdateRecordStateOutput" type="tns:UpdateRecordStateOutputType"/>
			<xsd:element name="UpdateEventInput" type="tns:UpdateEventInputType"/>
			<xsd:element name="UpdateEventOutput" type="tns:UpdateEventOutputType"/>
			<xsd:element name="SendInput" type="tns:SendInputType"/>
			<xsd:element name="SendOutput" type="tns:SendOutputType"/>
			<xsd:element name="EvaluateSubsetInput" type="tns:EvaluateSubsetInputType"/>
			<xsd:element name="EvaluateSubsetOutput" type="tns:EvaluateSubsetOutputType"/>
			<xsd:element name="SampleInput" type="tns:SampleInputType"/>
			<xsd:element name="SampleOutput" type="tns:SampleOutputType"/>

			<!-- CheckMessageStatus parameters and message types -->
			<xsd:complexType name="CheckMessageStatusInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="MessageID1" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="SelectionMethod" type="tns:SelectionMethodType" default="Last">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>


			<xsd:complexType name="SelectionMethodType">
				<xsd:simpleContent>
					<xsd:extension base="tns:SelectionMethodValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="SelectionMethodValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="First"/>
					<xsd:enumeration value="Last"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="CheckMessageStatusOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MessageID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MessageStatus" type="tns:MessageStatusType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProcessID" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProcessStatus" type="tns:ProcessStatusType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>

			</xsd:complexType>

			<xsd:element name="CheckMessageStatusOutput" type="tns:CheckMessageStatusOutputType"/>
			<xsd:element name="CheckMessageStatusInput" type="tns:CheckMessageStatusInputType"/>

			<!-- CheckRecordInWorkflow parameters and message types -->
			<xsd:simpleType name="MessageIdValueType">
				<xsd:restriction base="xsd:string"/>
			</xsd:simpleType>

			<xsd:complexType name="MessageIdType">
				<xsd:simpleContent>
					<xsd:extension base="tns:MessageIdValueType"/>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="MessageStatusType">
				<xsd:simpleContent>
					<xsd:extension base="tns:MessageStatusValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="MessageStatusValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="NOTFOUND"/>
					<xsd:enumeration value="OPEN"/>
					<xsd:enumeration value="CLOSED"/>
					<xsd:enumeration value="OPEN_TIMEDOUT"/>
					<xsd:enumeration value="CLOSED_TIMEDOUT"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="ProcessStatusType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ProcessStatusValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="ProcessStatusValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="INPROGRESS"/>
					<xsd:enumeration value="WAIT-TASK"/>
					<xsd:enumeration value="WAIT-WORKITEM"/>
					<xsd:enumeration value="COMPLETED"/>
					<xsd:enumeration value="CANCELLED"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="CheckRecordInWorkflowInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="CheckRecordState" type="tns:CheckRecordStateType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="CheckRecordStateType">
				<xsd:simpleContent>
					<xsd:extension base="tns:CheckRecordStateValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="CheckRecordStateValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="CheckInWorkflow"/>
					<xsd:enumeration value="CheckExists"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="CheckRecordInWorkflowOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="CheckRecordInWorkflowInput" type="tns:CheckRecordInWorkflowInputType"/>
			<xsd:element name="CheckRecordInWorkflowOutput" type="tns:CheckRecordInWorkflowOutputType"/>

			<!-- CompareRecord parameters and message types -->
			<xsd:complexType name="CompareRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CompareKeyword" type="tns:CompareKeywordType"
						default="PREVIOUS_CONFIRMED_VERSION">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="FullCompareFlag" type="tns:FullCompareFlagType" default="False">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="CompareMode" type="tns:CompareModeType" maxOccurs="1" minOccurs="0" default=""></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="CompareRecordOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="CompareKeywordType">
				<xsd:simpleContent>
					<xsd:extension base="tns:CompareKeywordValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="CompareKeywordValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="PREVIOUS_CONFIRMED_VERSION"> </xsd:enumeration>
					<xsd:enumeration value="PREVIOUS_VERSION"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="FullCompareFlagType">
				<xsd:simpleContent>
					<xsd:extension base="tns:FullCompareFlagValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="FullCompareFlagValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="True"> </xsd:enumeration>
					<xsd:enumeration value="False"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="CompareModeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:CompareModeValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="CompareModeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value=""/>
					<xsd:enumeration value="BUNDLE"/>
				</xsd:restriction>
			</xsd:simpleType>
			
			<xsd:element name="CompareRecordInput" type="tns:CompareRecordInputType"/>
			<xsd:element name="CompareRecordOutput" type="tns:CompareRecordOutputType"/>


			<!-- ConvertRecordToOutput parameters and message types -->
			<xsd:complexType name="ConvertRecordToOutputInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator"
						type="tns:AsyncProcessIndicatorType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="BundlePerAsyncCall" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CatalogOutputMap" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionOption" type="tns:VersionOptionType"
						default="CONFIRMED">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="FEDOption" type="tns:FutureDateType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="ConvertRecordToOutputOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="DataTruncationWarningFlag" type="tns:BoolType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType" />
					<xsd:element name="StepID" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>

				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="ConvertRecordToOutputInput" type="tns:ConvertRecordToOutputInputType"/>
			<xsd:element name="ConvertRecordToOutputOutput" type="tns:ConvertRecordToOutputOutputType"/>



			<!-- CreateOutputFile parameters and message types -->
			<xsd:complexType name="CreateOutputFileInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator"
						type="tns:AsyncProcessIndicatorType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="BundlePerAsyncCall" type="tns:LongType" default="10">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ExecutionMode" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ReferenceStepID" type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="FEDOption" type="tns:FutureDateType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="CreateOutputFileOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="CreateOutputFileInput" type="tns:CreateOutputFileInputType"/>
			<xsd:element name="CreateOutputFileOutput" type="tns:CreateOutputFileOutputType"/>


			<!-- CreateWorkItem parameters and message types -->
			<xsd:complexType name="CreateWorkItemInputType">
				<xsd:sequence>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="ErrorSeverity" type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ExpiryType" type="tns:ExpiryTypeType" default="RELATIVE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ExpiryDate" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Form"
						type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="FormPresentation" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InformationThreshold" type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Intent" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MailPresentation" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MailType" type="tns:MailTypeType" default="LINK">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MaxNumberOfTimeouts" type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="ParticipantID" type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ParticipantType" type="tns:StringType">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="RemindBeforeNumberOfDays" type="tns:LongType" default="1">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Rulebase" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SkipPrevOwners" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ValidateUsingRuleBase" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="WarningThreshold" type="tns:LongType" default="99" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="RecordAttributeName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>

					<xsd:element name="ReassignMailPresentation"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>


					<xsd:element name="DelegationMailPresentation"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="ReferenceStepID"
						type="tns:LongType" maxOccurs="1" minOccurs="0" default="0">
					</xsd:element>
					<xsd:element name="DisplayDate"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="TaskType" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="Keyword" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1"
						name="CustomExcludeSingleMatch" type="tns:BoolType"
						default="false" />
					<xsd:element name="CUSTOMDisplayServlet"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>

					<xsd:element name="PerspectiveName" type="tns:StringType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:simpleType name="ExpiryTypeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="RELATIVE"/>
					<xsd:enumeration value="RELATIVELOOP"/>
					<xsd:enumeration value="ABSOLUTE"/>
					<xsd:enumeration value="COMPUTE"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="ExpiryTypeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ExpiryTypeValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="MailTypeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="LINK"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="MailTypeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:MailTypeValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="CreateWorkItemOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="FailedDelegations" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InitialParticipantNumber" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="NumberCreated" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ParticipantName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ReminderNumber" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="TimedOutParticipantID" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="UsersSelected" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="WorkItemCreated" type="tns:BoolType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
					<xsd:element name="MergedDocument" type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="0"></xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1" name="RecordListForNew" type="tns:ArrayListType"/>
                                        <xsd:element minOccurs="0" maxOccurs="1" name="MergeCount" type="tns:LongType" default="0"/>
                                        <xsd:element minOccurs="0" maxOccurs="1" name="RecordListForReject" type="tns:ArrayListType"/>
                                        <xsd:element minOccurs="0" maxOccurs="1" name="MatchingRecordKey" type="tns:StringType" default=""/>
					<xsd:element minOccurs="0" maxOccurs="1" name="OutRecordList2" type="tns:RecordListType"/>
                                        <xsd:element minOccurs="0" maxOccurs="1" name="OutRecordList" type="tns:RecordListType"/>

				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="CreateWorkItemInput" type="tns:CreateWorkItemInputType"/>
			<xsd:element name="CreateWorkItemOutput" type="tns:CreateWorkItemOutputType"/>



			<!-- DeleteRecord parameters and message types -->
			<xsd:complexType name="DeleteRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="IncludeDraftRecords" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProductExtns" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProductIds" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordKey" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="unbounded" minOccurs="0"
						name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionOption" type="tns:VersionOptionType"
						default="CONFIRMED" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="ImportDataDeleteRecord"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="DeleteRecordOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsDeleted" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="DeleteRecordInput" type="tns:DeleteRecordInputType"/>
			<xsd:element name="DeleteRecordOutput" type="tns:DeleteRecordOutputType"/>


			<!-- DuplicateMessageCheck parameters and message types -->
			<xsd:complexType name="DuplicateMessageCheckInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="PayloadID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="MarketOrganizationID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Fatal" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="DuplicateMessageCheckOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="IsDuplicate" type="tns:BoolType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="DuplicateMessageCheckInput" type="tns:DuplicateMessageCheckInputType"/>
			<xsd:element name="DuplicateMessageCheckOutput" type="tns:DuplicateMessageCheckOutputType"/>


			<!-- EvaluateRuleBase parameters and message types -->
			
			<xsd:simpleType name="RecordExecutionModeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="AllRecords"/>
					<xsd:enumeration value="NoRecords"/>
				</xsd:restriction>
			</xsd:simpleType>
			
			<xsd:complexType name="RecordExecutionModeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:RecordExecutionModeValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			
			<xsd:complexType name="EvaluateRuleBaseInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AllowDuplicateInOutput" type="tns:BoolType"
						default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AllowDuplicateInReturn" type="tns:BoolType"
						default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="BundlePerAsyncCall" type="tns:LongType" default="10">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CatalogValidation" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ErrorSeverity" type="tns:LongType" default="9">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="EvaluateChildren" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ExecutionMode" type="tns:RecordExecutionModeType"
						default="AllRecords">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="IncludeDeletedRecords" type="tns:BoolType"
						default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="LogOption" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordPerAsyncCall" type="tns:LongType" default="10">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RemoveRecord" type="tns:RemoveRecordType" default="FATAL">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Rulebase" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SaveFlag" type="tns:SaveFlagType" default="NOSAVE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Severity" type="tns:LongType" default="9">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="StandardValidation" type="tns:BoolType" default="true" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="Status"
						type="tns:RecordStateType" maxOccurs="1" minOccurs="0"
						default="UNCONFIRMED" />
					<xsd:element name="OverwriteRelationships"
						type="tns:BoolType" maxOccurs="1" minOccurs="0" default="false">
					</xsd:element>
					<xsd:element name="VersionOption"
						type="tns:VersionOptionType" maxOccurs="1" minOccurs="0"
						default="CONFIRMED">
					</xsd:element>
					<xsd:element name="ValidationExclusion"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="VersionPolicy"
						type="tns:VersionPolicyType" maxOccurs="1" minOccurs="0"
						default="New">
					</xsd:element>
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:simpleType name="LogOptionValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="A"/>
					<xsd:enumeration value="E"/>
					<xsd:enumeration value="F"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="LogOptionType">
				<xsd:simpleContent>
					<xsd:extension base="tns:LogOptionValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="RemoveRecordValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="NONE"/>
					<xsd:enumeration value="FATAL"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="RemoveRecordType">
				<xsd:simpleContent>
					<xsd:extension base="tns:RemoveRecordValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="SaveFlagType">
				<xsd:simpleContent>
					<xsd:extension base="tns:SaveFlagValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="SaveFlagValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="SAVE"/>
					<xsd:enumeration value="NOSAVE"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="EvaluateRuleBaseOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ValidationErrors" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ResultArray" type="tns:ArrayListType">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList2" type="tns:RecordListType">
					</xsd:element>
					<xsd:element name="StaleDataError"
						type="tns:BoolType" maxOccurs="1" minOccurs="0" />
					<xsd:element name="ValidationErrors1"
						type="tns:LongType" maxOccurs="1" minOccurs="0" />
					<xsd:element name="ProductKeyArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="SenderArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="ChannelArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="TradingPartnerArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1" name="MatchAttributeArray" type="tns:ArrayListType"/>
                    <xsd:element minOccurs="0" maxOccurs="1" name="SkipAttributeArray" type="tns:ArrayListType"/>
                    <xsd:element name="ImportErrorLogFile"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="EvaluateRuleBaseInput" type="tns:EvaluateRuleBaseInputType"/>
			<xsd:element name="EvaluateRuleBaseOutput" type="tns:EvaluateRuleBaseOutputType"/>


			<!-- ExecuteExternalCommand parameters and message types -->
			<xsd:complexType name="ExecuteExternalCommandInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="Command" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="File" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Name" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Todir" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="Tofile" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="TofileExt" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="TofilePrefix" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="TofileSuffix" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Torelative" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="ExecuteExternalCommandOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="ExecuteExternalCommandInput" type="tns:ExecuteExternalCommandInputType"/>
			<xsd:element name="ExecuteExternalCommandOutput" type="tns:ExecuteExternalCommandOutputType"/>

			<!-- GetRecord parameters and message types -->
			<xsd:complexType name="GetRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Agency" type="tns:AgencyType" default="SOURCE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CatalogOutputMap" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RelationshipDepth" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionKeyword" type="tns:VersionKeywordType"
						default="LATEST">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="AgencyType">
				<xsd:simpleContent>
					<xsd:extension base="tns:AgencyValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="AgencyValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="SOURCE"/>
					<xsd:enumeration value="SUPPLIER"/>
					<xsd:enumeration value="SELLER"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:simpleType name="RelationshipDepthValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="ALLLEVELS"/>
					<xsd:enumeration value="FIRSTLEVEL"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="RelationshipDepthType">
				<xsd:simpleContent>
					<xsd:extension base="tns:RelationshipDepthValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="VersionKeywordValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="SUPPLIED"/>
					<xsd:enumeration value="CONFIRMED"/>
					<xsd:enumeration value="LATEST"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="VersionKeywordType">
				<xsd:simpleContent>
					<xsd:extension base="tns:VersionKeywordValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="GetRecordOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="GetRecordInput" type="tns:GetRecordInputType"/>
			<xsd:element name="GetRecordOutput" type="tns:GetRecordOutputType"/>



			<!-- GetSyncStatus parameters and message types -->
			<xsd:element name="GetSyncStatusInput" type="tns:GetSyncStatusInputType"> </xsd:element>
			<xsd:element name="GetSyncStatusOutput" type="tns:GetSyncStatusOutputType"> </xsd:element>

			<xsd:complexType name="GetSyncStatusInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ChannelID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ChannelName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="StatusGroup" type="tns:StatusGroupType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="SyncStatus" type="tns:SyncStatusType" default="">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="OrganizationType" type="tns:OrganizationTypeType" default="BUYER">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="TradingPartnerID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="TradingPartnerName" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:simpleType name="StatusGroupValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="REGISTRATION"/>
					<xsd:enumeration value="PUBLICATION"/>
					<xsd:enumeration value="CONFIRMATION"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="StatusGroupType">
				<xsd:simpleContent>
					<xsd:extension base="tns:StatusGroupValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="SyncStatusValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value=""/>
					<xsd:enumeration value="PUBLISHED"/>
					<xsd:enumeration value="DISCONTINUED"/>
					<xsd:enumeration value="CANCELLED"/>
					<xsd:enumeration value="ACCEPTED"/>
					<xsd:enumeration value="REVIEWED"/>
					<xsd:enumeration value="REGISTERED"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="SyncStatusType">
				<xsd:simpleContent>
					<xsd:extension base="tns:SyncStatusValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="OrganizationTypeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="RETAILER"/>
					<xsd:enumeration value="BUYER"/>
					<xsd:enumeration value="SUPPLIER"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="OrganizationTypeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:OrganizationTypeValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="GetSyncStatusOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ChannelCredential" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ChannelID" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordKey" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="StatusGroup" type="tns:ArrayListType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SyncStatus" type="tns:ArrayListType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="TradingPartnerCredential" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="TradingPartnerID" type="tns:ArrayListType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>


			<!-- HandleMessaging parameters and message types -->
			<xsd:complexType name="HandleMessagingInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CommandsPerMessage" type="tns:LongType" default="50">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProtocolMessagingCommand"
						type="tns:ProtocolMessagingCommandType" default="START">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="ReferenceStepID" type="tns:LongType" default="0">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ResponseRequired" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InRecordList" type="tns:RecordListType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="FEDOption" type="tns:FutureDateType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:simpleType name="ProtocolMessagingCommandValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="START"/>
					<xsd:enumeration value="CONTINUE"/>
					<xsd:enumeration value="SUSPEND"/>
					<xsd:enumeration value="ABORT"/>
					<xsd:enumeration value="TIMEOUT"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="ProtocolMessagingCommandType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ProtocolMessagingCommandValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="HandleMessagingOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProtocolMessageGenerated" type="tns:BoolType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProtocolMessagingNextCommand"
						type="tns:ProtocolMessagingNextCommandType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:simpleType name="ProtocolMessagingNextCommandValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="CONTINUE"/>
					<xsd:enumeration value="SUSPEND"/>
					<xsd:enumeration value="DONE"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="ProtocolMessagingNextCommandType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ProtocolMessagingNextCommandValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			<xsd:element name="HandleMessagingInput" type="tns:HandleMessagingInputType"/>
			<xsd:element name="HandleMessagingOutput" type="tns:HandleMessagingOutputType"/>


			<!-- IdentifyActionType parameters and message types -->
			<xsd:complexType name="IdentifyActionTypeInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InRecordList" type="tns:RecordListType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="IdentifyActionTypeOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordState" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList2" type="tns:RecordListType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="IdentifyActionTypeInput" type="tns:IdentifyActionTypeInputType"/>
			<xsd:element name="IdentifyActionTypeOutput" type="tns:IdentifyActionTypeOutputType"/>

			<!-- IdentifyProtocolOperations parameters and message types -->
			<xsd:complexType name="IdentifyProtocolOperationsInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ConnectorRole" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="BundlePerAsyncCall" type="tns:LongType" default="10">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Rulebase" type="tns:StringType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />

					<xsd:element name="ReferenceStepID"
						type="tns:LongType" maxOccurs="1" minOccurs="0" default="0">
					</xsd:element>
					<xsd:element name="FEDOption"
						type="tns:FutureDateType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="FEDDate" type="tns:StringType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="IdentifyProtocolOperationsOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ConnectorProtocol" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsyncStepID" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="IdentifyProtocolOperationsInput" type="tns:IdentifyProtocolOperationsInputType"/>
			<xsd:element name="IdentifyProtocolOperationsOutput" type="tns:IdentifyProtocolOperationsOutputType"/>


			<!-- IdentifyRecordVersions parameters and message types -->
			<xsd:complexType name="IdentifyRecordVersionsInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="IdentifyRecordVersionsOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="IdentifyRecordVersionsInput" type="tns:IdentifyRecordVersionsInputType"/>
			<xsd:element name="IdentifyRecordVersionsOutput" type="tns:IdentifyRecordVersionsOutputType"/>



			<!-- ImportCatalog parameters and message types -->
			<xsd:complexType name="ImportCatalogInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="CatalogInputMap" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ErrorSeverity" type="tns:LongType" default="9">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ErrorThreshold" type="tns:LongType" default="1000">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Incremental" type="tns:IncrementalType" default="Yes">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="MergeData" type="tns:MergeDataType" default="Yes">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ProcessOption" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="RecordPerAsyncCall" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Rulebase" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="SplitImportBatch" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="IncrementalType">
				<xsd:simpleContent>
					<xsd:extension base="tns:IncrementalValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="IncrementalValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Yes"/>
					<xsd:enumeration value="No"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="MergeDataType">
				<xsd:simpleContent>
					<xsd:extension base="tns:MergeDataValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="MergeDataValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Yes"/>
					<xsd:enumeration value="No"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="ImportCatalogOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CatalogsWithErrors" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="DeletedRecords" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="DuplicateRecords" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="EditedRecords" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ImportErrorLogFile" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="NewRecords" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsAttempted" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsSuccess" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RejectedRecords" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="ImportCatalogInput" type="tns:ImportCatalogInputType"/>
			<xsd:element name="ImportCatalogOutput" type="tns:ImportCatalogOutputType"/>


			<!-- ImportClassificationScheme parameters and message types -->
			<xsd:complexType name="ImportClassificationSchemeInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="Incremental" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="ImportClassificationSchemeOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CSRowCount" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CSNewCount" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="CSModCount" type="tns:LongType" />

                    <xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
                </xsd:sequence>
			</xsd:complexType>
			<xsd:element name="ImportClassificationSchemeInput" type="tns:ImportClassificationSchemeInputType"/>
			<xsd:element name="ImportClassificationSchemeOutput" type="tns:ImportClassificationSchemeOutputType"/>


			<!-- InitiateSubFlow parameters and message types -->
			<xsd:complexType name="InitiateSubFlowInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ProcessID" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
					<xsd:element name="EVENTDESCRIPTOR" type="tns:StringType" maxOccurs="1" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="InitiateSubFlowOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="InitiateSubFlowInput" type="tns:InitiateSubFlowInputType"/>
			<xsd:element name="InitiateSubFlowOutput" type="tns:InitiateSubFlowOutputType"/>

			<!-- InitiateWorkflow parameters and message types -->
			<xsd:element name="InitiateWorkflowResponse">
				<xsd:complexType>
					<xsd:sequence>

						<xsd:element name="StepID"
							type="tns:LongType" maxOccurs="1" minOccurs="0">
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>

			<xsd:complexType name="InitiateWorkflowInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProcessID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProcessIDType" type="tns:ProcessIDTypeType"
						default="MESSAGEID">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Command" type="tns:CommandType" default="START">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SelectionMethod" type="tns:SelectionMethodType"
						default="Last" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType">
					</xsd:element>
					<xsd:element name="InDocument"
						type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="1">
					</xsd:element>
					<xsd:element name="WorkflowPriority"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="ProcessIDTypeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ProcessIDTypeValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="ProcessIDTypeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="MESSAGEID"/>
					<xsd:enumeration value="DEFINITIONID"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="CommandType">
				<xsd:simpleContent>
					<xsd:extension base="tns:CommandValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="CommandValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="START"/>
					<xsd:enumeration value="RESUME"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:element name="InitiateWorkflowInput" type="tns:InitiateWorkflowInputType"/>


			<xsd:element name="InterpretCommandInput" type="tns:InterpretCommandInputType"> </xsd:element>
			<xsd:element name="InterpretCommandOutput" type="tns:InterpretCommandOutputType"> </xsd:element>

			<xsd:complexType name="InterpretCommandInputType">
				<xsd:sequence minOccurs="0">
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType">
					</xsd:element>


				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType">
				</xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="InterpretCommandOutputType">
				<xsd:sequence>
					<xsd:element name="ExportFileDirectory"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="JoinExistingWorkflowInput" type="tns:JoinExistingWorkflowInputType"> </xsd:element>
			<xsd:element name="JoinExistingWorkflowOutput" type="tns:JoinExistingWorkflowOutputType"> </xsd:element>

			<!-- JoinExistingWorkflow parameters and message types -->
			<xsd:complexType name="JoinExistingWorkflowInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InRecordList" type="tns:RecordListType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="JoinExistingWorkflowOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- ManageRecordCollection parameters and message types -->
			<xsd:element name="ManageRecordCollectionInput" type="tns:ManageRecordCollectionInputType"> </xsd:element>
			<xsd:element name="ManageRecordCollectionOutput" type="tns:ManageRecordCollectionOutputType"> </xsd:element>

			<xsd:complexType name="ManageRecordCollectionInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="BundlingOption" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="IncludeDraftRecords" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordPerAsyncCall" type="tns:LongType" default="20">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SetRecordListReadOnly" type="tns:BoolType"
						default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionOption" type="tns:VersionOptionType"
						default="CONFIRMED" />

					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="ManageRecordCollectionOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="BundlesCreated" type="tns:LongType" />
					<xsd:element name="OutRecordList2"
						type="tns:RecordListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- MatchRecord parameters and message types -->
			<xsd:element name="MatchRecordInput" type="tns:MatchRecordInputType"> </xsd:element>
			<xsd:element name="MatchRecordOutput" type="tns:MatchRecordOutputType"> </xsd:element>

			<xsd:complexType name="MatchRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>


					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordAttributeName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SourceProductKey" type="tns:StringType" />

					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType">
					</xsd:element>

					<xsd:element name="MatchRecordAttributeList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="SourceRecordKeyList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MatchingThreshold"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="RecordPerAsyncCall"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="AsynProcessIndicator"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="IndividualMatchScoreForEntity"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="ConsiderNonMatchingRecords"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="PenaltyForNonMatchingRecords"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="UseCustomQueryForNetrics"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="CustomNetricsQueryBuilderImpl"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="IndexEntityNameToSearch"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="MatchRecordOutputType">
				<xsd:sequence>


					<xsd:element maxOccurs="1" minOccurs="1"
						name="MatchCount" type="tns:LongType">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="MatchingRecordKey" type="tns:StringType" />
					<xsd:element name="StepID" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MatchingRecordRelevanceScore"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MatchRecordProcessLogID"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MultipleMatchSourceRecordList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MultipleMatchTargetRecordList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MultipleMatchTargetRelevanceList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="NoMatchSourceRecordList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="SingleMatchSourceRecordList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="SingleMatchTargetRecordList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="SingleMatchTargetRelevanceList"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="CrossRepositoryMatch" type="tns:BoolType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- MergeRecord parameters and message types -->
			<xsd:element name="MergeRecordInput" type="tns:MergeRecordInputType"> </xsd:element>
			<xsd:element name="MergeRecordOutput" type="tns:MergeRecordOutputType"> </xsd:element>

			<xsd:complexType name="MergeRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RejectFlag" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SkipMergeAttributeList" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AllowMergeAttributeList" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="IncludeDraftRecords" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SaveFlag" type="tns:SaveFlagType" default="SAVE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SourceRecordKey" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="TargetRecordKey" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionOption" type="tns:VersionOptionType"
						default="CONFIRMED" />

					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="ProcessLogID" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="RecordPerAsyncCall"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="AsynProcessIndicator"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1"
						name="ReferenceStepID" type="tns:LongType" default="0" />
					<xsd:element name="ImplicitRelationshipMerge"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MergeRecordUsingLegacyProcess"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="Rulebase" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="ErrorSeverity"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="MergeTargetInOutdoc"
						type="tns:BoolType" maxOccurs="1" minOccurs="0" default="false">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="MergeRecordOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="RecordKey" type="tns:ArrayListType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="MergeFormInput" type="tns:MergeFormInputType"> </xsd:element>
			<xsd:element name="MergeFormOutput" type="tns:MergeFormOutputType"> </xsd:element>

			<xsd:complexType name="MergeFormInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="InWiDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="MergeFormOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- NoOperation parameters and message types -->
			<xsd:element name="NoOperationInput" type="tns:NoOperationInputType"> </xsd:element>
			<xsd:element name="NoOperationOutput" type="tns:NoOperationOutputType"> </xsd:element>

			<xsd:complexType name="NoOperationInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType">
				</xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="NoOperationOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- ProcessServiceMessage parameters and message types -->
			<xsd:element name="ProcessServiceMessageInput" type="tns:ProcessServiceMessageInputType"/>

			<xsd:element name="ProcessServiceMessageOutput" type="tns:ProcessServiceMessageOutputType"/>

			<xsd:complexType name="ProcessServiceMessageInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
					<xsd:element name="MetadataVersionCompatability" type="tns:StringType" maxOccurs="1" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="ProcessServiceMessageOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="LogFile" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<!-- Purge parameters and message types -->
			<xsd:simpleType name="ArchiveDataType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Yes"/>
					<xsd:enumeration value="No"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="PurgeInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="DeleteRecordVersions" type="tns:DeleteRecordVersionsType"
						default="No">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<!--  We need to provide default as 6( this is default value in CIM) to satisfy BS validation requirement -->
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RetentionUnits" type="tns:LongType" default="6">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RetentionUOM" type="tns:RetentionUOMType" default="MONTH" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="VersionsToRetain"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>

					<xsd:element name="InDocument"
						type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="1">
					</xsd:element>
					<xsd:element name="PurgeEnterpriseOption"
						type="tns:PurgeEnterpriseOptionType" maxOccurs="1"
						minOccurs="0">
					</xsd:element>
					<xsd:element name="PurgeExecMode"
						type="tns:PurgeExecModeType" maxOccurs="1" minOccurs="0"
						default="history">
					</xsd:element>
					<xsd:element name="Interval" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="Hints" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="StartDate" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="EndDate" type="tns:StringType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:element name="PurgeInput" type="tns:PurgeInputType"/>
			<xsd:element name="PurgeOutput" type="tns:PurgeOutputType"/>

			<xsd:complexType name="PurgeEnterpriseOptionType">
				<xsd:simpleContent>
					<xsd:extension base="tns:PurgeEnterpriseOptionValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="PurgeEnterpriseOptionValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="ALL"/>									
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="DeleteRecordVersionsType">
				<xsd:simpleContent>
					<xsd:extension base="tns:DeleteRecordVersionsValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="DeleteRecordVersionsValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Y"/>
					<xsd:enumeration value="N"/>
					<xsd:enumeration value="Yes"/>
					<xsd:enumeration value="No"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:simpleType name="RetentionUOMValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="MONTH"/>
					<xsd:enumeration value="DAY"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="RetentionUOMType">
				<xsd:simpleContent>
					<xsd:extension base="tns:RetentionUOMValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:complexType name="PurgeOutputType">
				<xsd:sequence>

					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:complexType name="AdvancedPurgeInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="DeleteRecordVersions" type="tns:DeleteRecordVersionsType" default="No">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="EnterpriseName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="RetentionUnits" type="tns:LongType" default="6">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="RetentionUOM" type="tns:RetentionUOMType" default="MONTH">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="PurgeStartDate" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="InDocument" type="tns:mlXMLDocumentType"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="AdvancedPurgeOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="AdvancedPurgeInput" type="tns:AdvancedPurgeInputType"/>
			<xsd:element name="AdvancedPurgeOutput" type="tns:AdvancedPurgeOutputType"/>

			<!-- Reclassify parameters and message types -->
			<xsd:complexType name="ReclassifyRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="ImportClassificationScheme" type="tns:BoolType" maxOccurs="1" minOccurs="0"></xsd:element>
					<xsd:element name="MasterCatalog" type="tns:StringType" maxOccurs="1" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>

			<xsd:complexType name="ReclassifyRecordOutputType">
				<xsd:sequence>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="ReclassifyRecordInput" type="tns:ReclassifyRecordInputType"/>
			<xsd:element name="ReclassifyRecordOutput" type="tns:ReclassifyRecordOutputType"/>

			<!-- SaveRecord parameters and message types -->
			<xsd:complexType name="SaveRecordInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Comment" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ErrorSeverity" type="tns:LongType" default="9">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OverrideConflict" type="tns:BoolType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Overwrite" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProductExtns" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ProductIds" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Reason" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordPerAsyncCall" type="tns:LongType" default="20">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Rulebase" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="StandardValidation" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Status" type="tns:RecordStateType" default="UNCONFIRMED" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionOption" type="tns:VersionOptionType"
						default="CONFIRMED">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="RecordState"
						type="tns:RecordStateType" maxOccurs="1" minOccurs="0"
						default="UNCONFIRMED">
					</xsd:element>
					<xsd:element name="ApplyValidation"
						type="tns:BoolType" maxOccurs="1" minOccurs="0" default="false">
					</xsd:element>
					<xsd:element name="VersionPolicy"
						type="tns:VersionPolicyType" maxOccurs="1" minOccurs="0"
						default="New">
					</xsd:element>
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="RetainExistingRelationships"
						type="tns:BoolType" maxOccurs="1" minOccurs="0" default="false">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>


			<xsd:simpleType name="StatusValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="CONFIRMED"/>
					<xsd:enumeration value="UNCONFIRMED"/>
					<xsd:enumeration value="REJECTED"/>
				</xsd:restriction>
			</xsd:simpleType>
			
			<xsd:complexType name="RecordStateType">
				<xsd:simpleContent>
					<xsd:extension base="tns:RecordStateValueType">
						<xsd:attribute name="type" type="xsd:string"/>
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			<xsd:simpleType name="RecordStateValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="DRAFT"/>
					<xsd:enumeration value="CONFIRMED"/>
					<xsd:enumeration value="UNCONFIRMED"/>
				</xsd:restriction>
			</xsd:simpleType>

			<xsd:complexType name="SaveRecordOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsAttempted" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsWithErrors" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="StaleDataError" type="tns:BoolType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsWithWarnings" type="tns:LongType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="SaveRecordInput" type="tns:SaveRecordInputType"/>
			<xsd:element name="SaveRecordOutput" type="tns:SaveRecordOutputType"/>

			<!-- SendProtocolMessage parameters and message types -->
			<xsd:complexType name="SendProtocolMessageInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="Address" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="BizProtocol" type="tns:BizProtocolType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ChannelCredential" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ChannelOrganizationName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ConversationKey" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ExpiryDate" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ExpiryType" type="tns:ExpiryTypeType" default="RELATIVE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument2" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="MessageID1" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="PayloadPackagingScheme" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ReceiverCredential" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ReceiverOrganizationName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SenderCredential" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="TrackMessageResponse" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="GenerateCommEvent" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="DefaultDomain" type="tns:StringType" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType" />
					<xsd:element name="SaveCachedDocument" type="tns:BoolType" maxOccurs="1" minOccurs="0" default="true"></xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>

			<xsd:complexType name="SendProtocolMessageOutputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>

			<xsd:element name="SendProtocolMessageInput" type="tns:SendProtocolMessageInputType"/>
			<xsd:element name="SendProtocolMessageOutput" type="tns:SendProtocolMessageOutputType"/>
           
           <!-- SpawnWorkflow parameters and message types -->
			<xsd:complexType name ="SpawnWorkflowInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator"
						type="tns:AsyncProcessIndicatorType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ChannelCredential" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1"
						name="DocumentTemplate" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="DefaultDomain" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="Form"
						type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ReceiverCredential" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordKey" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordPerAsyncCall" type="tns:LongType" default="20">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="SenderCredential" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="TradingPartnerCredential" type="tns:ArrayListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="VersionOption" type="tns:VersionOptionType"
						default="CONFIRMED" />
					<xsd:element maxOccurs="1" minOccurs="0"
						name="eventState" type="tns:StringType">
					</xsd:element>
					<xsd:element name="WorkflowPriority"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="RecordSequencing"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="RecordSequencingAttribute"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="PerspectiveName"
						type="tns:StringType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>
			
			<xsd:complexType name="SpawnWorkflowOutputType">

				<xsd:sequence>

                    <xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="SpawnWorkflowInput" type="tns:SpawnWorkflowInputType"/>
			<xsd:element name="SpawnWorkflowOutput" type="tns:SpawnWorkflowOutputType"/>
			
			<!--  StateTransition parameters and message types -->
			<xsd:simpleType name="ConversationActionValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="new"/>
					<xsd:enumeration value="join"/>
					<xsd:enumeration value="connect"/>
				</xsd:restriction>
				
			</xsd:simpleType>
			<xsd:complexType name="ConversationActionType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ConversationActionValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:simpleType name="ConversationTypeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="GLOBAL"/>
					<xsd:enumeration value="LOCAL"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="ConversationTypeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ConversationTypeValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:complexType name="StateTransitionInputType">
					<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="InDocument" type="tns:mlXMLDocumentType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="ConversationAction" type="tns:ConversationActionType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0"
							name="ConversationType" type="tns:ConversationTypeType"
							default="LOCAL">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="MoveTo" type="tns:StringType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1"
							name="Key1" type="tns:StringType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0"
							name="NewKey1" type="tns:StringType" />
						<xsd:element maxOccurs="1" minOccurs="0"
							name="eventState" type="tns:StringType">
						</xsd:element>

						<xsd:element name="CheckTransition"
							type="tns:StringType" maxOccurs="1" minOccurs="0">
						</xsd:element>

					</xsd:sequence>
					<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>
			<xsd:complexType name="StateTransitionOutputType">
				<xsd:sequence>
					<xsd:element name="CouldMove" type="tns:BoolType"
						maxOccurs="1" minOccurs="0" />
					<xsd:element name="ConversationState"
						type="tns:StringType" maxOccurs="1" minOccurs="0" />
					<xsd:element name="StepID" type="tns:LongType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="OutDocument" type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="StateTransitionInput" type="tns:StateTransitionInputType"/>
			<xsd:element name="StateTransitionOutput" type="tns:StateTransitionOutputType"/>
			

			<!--  Translate parameters and message types -->
			<xsd:simpleType name="TranslatorValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="XSLT"/>
					<xsd:enumeration value="REPLACE"/>
					<xsd:enumeration value="XML2PDF"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="TranslatorType">
				<xsd:simpleContent>
					<xsd:extension base="tns:TranslatorValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:simpleType name="NormalizeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="None"/>
					<xsd:enumeration value="Pre"/>
					<xsd:enumeration value="Post"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="NormalizeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:NormalizeValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:complexType name="TranslateInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Translator" type="tns:TranslatorType" default="XSLT">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="DefaultTimeZone" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Derived" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Normalize" type="tns:NormalizeType" default="None">
					</xsd:element>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="OutputFormat" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="OutputFormatVersion" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="Map" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>
			<xsd:complexType name="TranslateOutputType">
				<xsd:sequence>
					<xsd:element name="OutDocument"
						type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="TranslateInput" type="tns:TranslateInputType"/>
			<xsd:element name="TranslateOutput" type="tns:TranslateOutputType"/>
			

			<!-- UploadDataSource parameters and message types -->
			<xsd:complexType name="UploadDataSourceInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="1" name="DataSource" type="tns:StringType">
			    	</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="DataSourceFileName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="DataSourceURI" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="InDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
					</xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1" name="MaxNumberOfErrors" type="tns:LongType" default="0"/>
					</xsd:sequence>
					<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>
			

			<xsd:complexType name="UploadDataSourceOutputType">
					<xsd:sequence>
						<xsd:element name="DataSourcesWithErrors"
							type="tns:LongType" maxOccurs="1" minOccurs="0">
						</xsd:element>
						<xsd:element name="ErrorFile"
							type="tns:StringType" maxOccurs="1" minOccurs="0">
						</xsd:element>
						<xsd:element name="TotalRecordsAttempted"
							type="tns:LongType" maxOccurs="1" minOccurs="0">
						</xsd:element>
						<xsd:element name="TotalRecordsWithErrors"
							type="tns:LongType" maxOccurs="1" minOccurs="0"/>
						<xsd:element name="StepID"
							type="tns:LongType" maxOccurs="1" minOccurs="0">
						</xsd:element>
					</xsd:sequence>
			</xsd:complexType>
			
			<xsd:element name="UploadDataSourceInput" type="tns:UploadDataSourceInputType"/>
			<xsd:element name="UploadDataSourceOutput" type="tns:UploadDataSourceOutputType"/>
			
			<!-- ValidateDocument parameters and message types -->
			
			<xsd:simpleType name="ValidatorValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Schema"/>
				</xsd:restriction>
			</xsd:simpleType>
			<xsd:complexType name="ValidatorType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ValidatorValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
			
			<xsd:complexType name="ValidateDocumentInputType">
				<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="0" name="Validator" type="tns:ValidatorType" default="Schema">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="InDocument" type="tns:mlXMLDocumentType"/>
						<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>
			<xsd:complexType name="ValidateDocumentOutputType">
				<xsd:sequence>
					<xsd:element name="IsValid" type="tns:BoolType"
						maxOccurs="1" minOccurs="0" />
					<xsd:element name="StepID"
						type="tns:LongType" maxOccurs="1" minOccurs="0">
					</xsd:element>
				</xsd:sequence>
			</xsd:complexType>
						
			<xsd:element name="ValidateDocumentInput" type="tns:ValidateDocumentInputType"/>			
			<xsd:element name="ValidateDocumentOutput" type="tns:ValidateDocumentOutputType"> </xsd:element>

			<!-- VerifyPartner parameters and message types -->
			<xsd:complexType name="VerifyPartnerInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="BuyerKey" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Domain" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>
						
			<xsd:complexType name="VerifyPartnerOutputType">
				<xsd:sequence>
					<xsd:element name="BuyerFound" type="tns:BoolType"
						maxOccurs="1" minOccurs="1">
					</xsd:element>
					<xsd:element name="OutDocument"
						type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="1" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:element name="VerifyPartnerInput" type="tns:VerifyPartnerInputType"/>			
			<xsd:element name="VerifyPartnerOutput" type="tns:VerifyPartnerOutputType"> </xsd:element>
		
		
			<!-- VerifyRecordStatus parameters and message types -->
			<xsd:complexType name="VerifyRecordStatusInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="Agency" type="tns:AgencyType" default="SOURCE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="MasterCatalog" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="OriginalDocID" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ProductOperation" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="status" type="tns:StringType"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"> </xsd:attribute>
			</xsd:complexType>
			<xsd:complexType name="VerifyRecordStatusOutputType">
				<xsd:sequence>
					<xsd:element name="AllConfirmed" type="tns:BoolType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="AllFound" type="tns:BoolType"
						maxOccurs="1" minOccurs="0" />
					<xsd:element name="NoneInWorkflow"
						type="tns:BoolType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="OutDocument"
						type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="0" />
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
				</xsd:sequence>
			</xsd:complexType>
			
			<xsd:element name="VerifyRecordStatusInput" type="tns:VerifyRecordStatusInputType"/>			
			<xsd:element name="VerifyRecordStatusOutput" type="tns:VerifyRecordStatusOutputType"> </xsd:element>
		
		
			<!-- WaitForResponse parameters and message types -->
			<xsd:complexType name="WaitForResponseInputType">
				<xsd:sequence>
						<xsd:element maxOccurs="1" minOccurs="0" name="ExpiryDate" type="tns:StringType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="ExpiryType" type="tns:ExpiryTypeType" default="RELATIVE">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="GlobalConversationID" type="tns:LongType" default="0">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1" name="InDocument" type="tns:mlXMLDocumentType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="InDocument2" type="tns:mlXMLDocumentType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="MailPresentation" type="tns:StringType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="1" name="ParticipantID" type="tns:LongType" default="0">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="MessageID1" type="tns:StringType">
						</xsd:element>
						<xsd:element maxOccurs="1" minOccurs="0" name="MailType" type="tns:MailTypeType" default="LINK"/>
						<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
						</xsd:element>
					</xsd:sequence>
					<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>
			</xsd:complexType>
			
			<xsd:complexType name="WaitForResponseOutputType">
					<xsd:sequence>
						<xsd:element name="TaskCreated"
							type="tns:BoolType" maxOccurs="1" minOccurs="0">
						</xsd:element>
						<xsd:element name="OutDocument"
							type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="0"/>
						<xsd:element name="StepID"
							type="tns:LongType" maxOccurs="1" minOccurs="0">
						</xsd:element>
					</xsd:sequence>
			</xsd:complexType>
			<xsd:element name="WaitForResponseInput" type="tns:WaitForResponseInputType"/>			
			<xsd:element name="WaitForResponseOutput" type="tns:WaitForResponseOutputType"> </xsd:element>
			
			
			<xsd:element name="CheckpointWorkflowInput" type="tns:CheckpointWorkflowInputType"/>			
			<xsd:element name="CheckpointWorkflowOutput" type="xsd:string"> </xsd:element>
		
			<xsd:complexType name="CheckpointWorkflowInputType">
				<xsd:sequence>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
			</xsd:complexType>
		
                    
            <xsd:element name="testOperationInput">
            	<xsd:complexType>
            		<xsd:sequence>
            			<xsd:element name="in" type="xsd:string"></xsd:element>
            			<xsd:element name="NewElement"
            				type="xsd:string">
            			</xsd:element>
            		</xsd:sequence>
            		<xsd:attribute name="NewAttribute"
            			type="xsd:string">
            		</xsd:attribute>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="testOperationResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="PrepareForImportCatalogInput" type="tns:PrepareForImportCatalogInputType">

            </xsd:element>
            
            <xsd:element name="parametersType" type="xsd:string"></xsd:element>
        
            <xsd:complexType name="PrepareForImportCatalogInputType">
            	<xsd:sequence>
            		<xsd:element name="AsynProcessIndicator"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0" default="true">
            		</xsd:element>
            		<xsd:element name="CatalogInputMap"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ErrorSeverity"
            			type="tns:LongType" maxOccurs="1" minOccurs="0" default="9">
            		</xsd:element>
            		<xsd:element name="ErrorThreshold"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="InDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="1">
            		</xsd:element>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="RecordPerAsyncCall"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="Rulebase" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ValidateOnly" type="tns:BoolType"
            			maxOccurs="1" minOccurs="0" default="false">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="PrepareForImportCatalogOutput" type="tns:PrepareForImportCatalogOutputType"></xsd:element>
        
            <xsd:complexType name="PrepareForImportCatalogOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ImportErrorLogFile" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            <xsd:element name="ExtractRelationshipInput" type="tns:ExtractRelationshipInputType"></xsd:element>
        
            <xsd:complexType name="ExtractRelationshipInputType">
            	<xsd:sequence>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="RecordPerAsyncCall"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="IsLoggingRequired"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ImportRelationshipsOnly"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
                    <xsd:element name="DeleteRelationshipsOnly" type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="AsynProcessIndicator"
            			type="tns:AsyncProcessIndicatorType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="ExtractRelationshipOutput"
            	type="tns:ExtractRelationshipOutputType">
            </xsd:element>
            
            <xsd:complexType name="ExtractRelationshipOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            <xsd:element name="ImportCatalogRecordsInput"
            	type="tns:ImportCatalogRecordsInputType">
            </xsd:element>
            
            <xsd:complexType name="ImportCatalogRecordsInputType">
            	<xsd:sequence>
            		<xsd:element name="AsynProcessIndicator"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="CatalogInputMap"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ErrorSeverity"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ErrorThreshold"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="Incremental"
            			type="tns:IncrementalType" maxOccurs="1" minOccurs="0"
            			default="Yes">
            		</xsd:element>

            		<xsd:element name="InDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="1">
            		</xsd:element>
            		<xsd:element name="InRecordList"
            			type="tns:RecordListType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="MergeData"
            			type="tns:MergeDataType" maxOccurs="1" minOccurs="0"
            			default="Yes">
            		</xsd:element>
            		<xsd:element name="ProcessOption"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RecordPerAsyncCall"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="Rulebase" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="SplitImportBatch"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RecordState"
            			type="tns:RecordStateType" maxOccurs="1" minOccurs="0"
            			default="DRAFT">
            		</xsd:element>
            		<xsd:element name="VersionPolicy"
            			type="tns:VersionPolicyType" maxOccurs="1"
            			minOccurs="0" default="New">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="ImportCatalogRecordsOutput"
            	type="tns:ImportCatalogRecordsOutputType">
            </xsd:element>
            
            <xsd:complexType name="ImportCatalogRecordsOutputType">
            	<xsd:sequence>
            		<xsd:element name="CatalogsWithErrors"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="CorrectedRecords" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            		<xsd:element name="DeletedRecords"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="DuplicateRecords"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EditedRecords"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="NewRecords" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RecordsAttempted"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RecordsProcessed"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RecordsSuccess"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RejectedRecords"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="OutDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            <xsd:element name="EvaluateMassupdateRulebaseInput"
            	type="tns:EvaluateMassupdateRulebaseInputType">
            </xsd:element>
            <xsd:element name="EvaluateMassupdateRulebaseOutput"
            	type="tns:EvaluateMassupdateRulebaseOutputType">
            </xsd:element>

            <xsd:complexType
            	name="EvaluateMassupdateRulebaseInputType">
            	
            			<xsd:sequence>
				      <xsd:element maxOccurs="1" minOccurs="0" name="AllowDuplicateInOutput" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="AllowDuplicateInReturn" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="AsynProcessIndicator" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="BundlePerAsyncCall" type="tns:LongType" default="10">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="CatalogValidation" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ErrorSeverity" type="tns:LongType" default="9">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="EvaluateChildren" type="tns:BoolType" default="true">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="ExecutionMode" type="tns:RecordExecutionModeType" default="AllRecords">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0" name="IncludeDeletedRecords" type="tns:BoolType" default="false">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="InDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="InRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="LogOption" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordPerAsyncCall" type="tns:LongType" default="10">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="RelationshipName" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="RemoveRecord" type="tns:RemoveRecordType" default="FATAL">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Rulebase" type="tns:StringType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="SaveFlag" type="tns:SaveFlagType" default="NOSAVE">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="Severity" type="tns:LongType" default="9">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0" name="StandardValidation" type="tns:BoolType" default="true"/>
					<xsd:element maxOccurs="1" minOccurs="0" name="eventState" type="tns:StringType"/>
            		<xsd:element name="Status" type="tns:RecordStateType" maxOccurs="1" minOccurs="0" default="UNCONFIRMED"/>
        		</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"/>

            </xsd:complexType>
		    <xsd:complexType name="EvaluateMassupdateRulebaseOutputType">
            	          	<xsd:sequence>
				        <xsd:element maxOccurs="1" minOccurs="0"
						name="OutDocument" type="tns:mlXMLDocumentType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ValidationErrors" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="ResultArray" type="tns:ArrayListType">
					</xsd:element>

					<xsd:element maxOccurs="1" minOccurs="0"
						name="RecordsProcessed" type="tns:LongType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList" type="tns:RecordListType">
					</xsd:element>
					<xsd:element maxOccurs="1" minOccurs="0"
						name="OutRecordList2" type="tns:RecordListType">
					</xsd:element>
					<xsd:element name="StaleDataError"
						type="tns:BoolType" maxOccurs="1" minOccurs="0" />
					<xsd:element name="ValidationErrors1"
						type="tns:LongType" maxOccurs="1" minOccurs="0" />
					<xsd:element name="ProductKeyArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="SenderArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="ChannelArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="TradingPartnerArray"
						type="tns:ArrayListType" maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
					<xsd:element minOccurs="0" maxOccurs="1" name="MatchAttributeArray" type="tns:ArrayListType"/>
                                        <xsd:element minOccurs="0" maxOccurs="1" name="SkipAttributeArray" type="tns:ArrayListType"/>
            				<xsd:element name="UpdatedRecordsCount"
            					type="tns:LongType" maxOccurs="1" minOccurs="0">
            				</xsd:element>
            			</xsd:sequence>
            		 </xsd:complexType>
		
		
		    <xsd:complexType name="ReportTypeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:ReportTypeValueType">
						<xsd:attribute name="eval" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="source" type="xsd:string"> </xsd:attribute>
						<xsd:attribute name="type" type="xsd:string"> </xsd:attribute>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>

			<xsd:simpleType name="ReportTypeValueType">
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value=""/>
					<xsd:enumeration value="detailed"/>
				</xsd:restriction>
			</xsd:simpleType>
			
		    <xsd:element name="GenerateReportForSDDInput" type="tns:GenerateReportForSDDInputType"></xsd:element>
		    <xsd:element name="GenerateReportForSDDOutput" type="tns:GenerateReportForSDDOutputType"></xsd:element>
			<xsd:complexType name="GenerateReportForSDDInputType">
				<xsd:sequence>
					<xsd:element name="templateLoc" type="tns:StringType"
						minOccurs="0" maxOccurs="1">
					</xsd:element>
					<xsd:element name="reportType" type="tns:ReportTypeType"
						maxOccurs="1" minOccurs="0" default="">
					</xsd:element>
					<xsd:element name="OutputFormat" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="eventState" type="tns:StringType"
						maxOccurs="1" minOccurs="0">
					</xsd:element>
					<xsd:element name="NumberOfRecordsToIncludeInReport"
						type="tns:LongType" maxOccurs="1" minOccurs="0" default="150">
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType">
				</xsd:attribute>
			</xsd:complexType>
            <xsd:complexType name="GenerateReportForSDDOutputType">
            	<xsd:sequence>
            		<xsd:element name="fileLocation"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
           
            <xsd:element name="ExtractDataToDelimitedFileInput"
            	type="tns:ExtractDataToDelimitedFileInputType">
            </xsd:element>
            <xsd:element name="ExtractDataToDelimitedFileOutput"
            	type="tns:ExtractDataToDelimitedFileOutputType">
            </xsd:element>
            <xsd:complexType
            	name="ExtractDataToDelimitedFileInputType">
            	<xsd:sequence>
            		<xsd:element name="Delimiter" type="tns:StringType"
            			maxOccurs="1" minOccurs="0" default=",">
            		</xsd:element>
            		<xsd:element name="TextQualifier"
            			type="tns:StringType" maxOccurs="1" minOccurs="0" default="&quot;">
            		</xsd:element>
            		<xsd:element name="DataFileExtension"
            			type="tns:StringType" maxOccurs="1" minOccurs="0" default="csv">
            		</xsd:element>
            		<xsd:element name="DateFormat" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="DropTempTables"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0" default="true">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RelationshipDepth"
            			type="tns:LongType" maxOccurs="1" minOccurs="0" default="10">
            		</xsd:element>
            		<xsd:element name="BackwardCompatible"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0" default="false">
            		</xsd:element>
            		<xsd:element name="InRecordList" type="tns:RecordListType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
            <xsd:complexType
            	name="ExtractDataToDelimitedFileOutputType">
            	<xsd:sequence>


            		<xsd:element name="StepID" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="OutDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
    
            <xsd:element name="CreateNamedVersionInput"
            	type="tns:CreateNamedVersionInputType">
            </xsd:element>
             <xsd:element name="CreateNamedVersionOutput"
            	type="tns:CreateNamedVersionOutputType">
            </xsd:element>
            <xsd:complexType name="CreateNamedVersionInputType">
            	<xsd:sequence>
            		<xsd:element name="NamedVersionTimestamp"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="Name" type="tns:StringType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="InDocument" type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="1"></xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
            <xsd:complexType name="CreateNamedVersionOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            
 
            <xsd:element name="PurgeStagingInput"
            	type="tns:PurgeStagingInputType">
            </xsd:element>
            <xsd:element name="PurgeStagingOutput" type="tns:PurgeStagingOutputType">
            </xsd:element>
            <xsd:complexType name="PurgeStagingInputType">
            	<xsd:sequence>
            		<xsd:element name="AsynProcessIndicator"
            			type="tns:AsyncProcessIndicatorType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RecordPerAsyncCall"
            			type="tns:LongType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="CatalogInputMap"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="InDocument" type="tns:mlXMLDocumentType" maxOccurs="1" minOccurs="1"></xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="PurgeStagingOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>

            </xsd:complexType>
  
            <xsd:element name="GetAssocEventsSummaryOutput" type="tns:GetAssocEventsSummaryOutputType">
            </xsd:element>
            <xsd:element name="GetAssocEventsSummaryInput" type="tns:GetAssocEventsSummaryInputType">
            </xsd:element>
            
            <xsd:simpleType name="SummaryOptionType">
            	<xsd:restriction base="xsd:string">
            		<xsd:enumeration value="Parent"/>
					<xsd:enumeration value="Children"/>
            	</xsd:restriction>
            </xsd:simpleType>
            
            <xsd:complexType name="GetAssocEventsSummaryInputType">
            	<xsd:sequence>
            		<xsd:element name="SummaryOption"
            			type="tns:SummaryOptionType" maxOccurs="1"
            			minOccurs="0" default="Parent">
            		</xsd:element>
            		<xsd:element name="LockOption" type="tns:BoolType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="GetAssocEventsSummaryOutputType">
            	<xsd:sequence>
            		<xsd:element name="TotalEventsProcessed"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventsToBeSpawned"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventsInError"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventsSuccessful"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventsInProgress"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventsCancelled"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventsYetToStart"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="EventID" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            
            <xsd:element name="RestartEventInput"
            	type="tns:RestartEventInputType">
            </xsd:element>
            <xsd:element name="RestartEventOutput"
            	type="tns:RestartEventOutputType">
            </xsd:element>
            
            <xsd:complexType name="RestartEventInputType">
            	<xsd:sequence>
            		<xsd:element name="EventID" type="tns:LongType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="RetryCount " type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="Interval" type="tns:LongType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="RestartEventOutputType">
            	<xsd:sequence>
            		<xsd:element name="InitiatedEventID"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            
            <xsd:element name="SuspendWorkflowInput"
            	type="tns:SuspendWorkflowInputType">
            </xsd:element>
            <xsd:element name="SuspendWorkflowOutput"
            	type="tns:SuspendWorkflowOutputType">
            </xsd:element>

            <xsd:complexType name="SuspendWorkflowInputType">
            	<xsd:sequence>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="SuspendWorkflowOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="SleepInput"></xsd:complexType>
            <xsd:element name="SleepOutput"
            	type="tns:SleepOutputType">
            </xsd:element>
            <xsd:element name="SleepInput" type="tns:SleepInputType"></xsd:element>
            
            <xsd:complexType name="SleepInputType">
            	<xsd:sequence>
            		<xsd:element name="Interval" type="tns:LongType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="SleepOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
 
            <xsd:element name="UndoEventInput"
            	type="tns:UndoEventInputType">
            </xsd:element>
            <xsd:element name="UndoEventOutput"
            	type="tns:UndoEventOutputType">
            </xsd:element>
            
            <xsd:complexType name="UndoEventInputType">
            	<xsd:sequence>
            		<xsd:element name="AsynProcessIndicator"
            			type="tns:AsyncProcessIndicatorType" maxOccurs="1"
            			minOccurs="0" default="true">
            		</xsd:element>
            		<xsd:element name="RecordPerAsyncCall"
            			type="tns:LongType" maxOccurs="1"
            			minOccurs="0" default="20">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute default="SYNCHR" name="ExecutionMode" type="tns:ExecutionModeType"></xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="UndoEventOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
		
            <xsd:simpleType name="PurgeModeType">
            	<xsd:restriction base="xsd:string">
					<xsd:enumeration value="MultiThreaded"/>
					<xsd:enumeration value="MultiThreadedForce"/>
				</xsd:restriction>
            </xsd:simpleType>
             <xsd:simpleType name="PurgeExecModeType">
            	<xsd:restriction base="xsd:string">
					<xsd:enumeration value="history"/>
					<xsd:enumeration value="historyForce"/>
				</xsd:restriction>
            </xsd:simpleType>
            <xsd:element name="UndoEvent">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="in" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="UndoEventResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>

            <xsd:element name="ManualClassificationInput"
            	type="tns:ManualClassificationInputType">

            </xsd:element>
            <xsd:element name="ManualClassificationResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
		
            <xsd:complexType name="ManualClassificationInputType">
            	<xsd:sequence>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="CatalogInputMap"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ClassifyRecordsOnly"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ErrorThreshold"
            			type="tns:LongType" maxOccurs="1" minOccurs="0" default="1000">
            		</xsd:element>
            		<xsd:element name="RecordPerAsyncCall"
            			type="tns:LongType" maxOccurs="1" minOccurs="0" default="20">
            		</xsd:element>
            		<xsd:element name="AsynProcessIndicator"
            			type="tns:AsyncProcessIndicatorType" maxOccurs="1" minOccurs="0" default="true">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="ExecutionMode" type="tns:ExecutionModeType" default="SYNCHR"></xsd:attribute>
            </xsd:complexType>
            <xsd:element name="ManualClassificationOutput"
            	type="tns:ManualClassificationOutputType">
            </xsd:element>
            
            <xsd:complexType name="ManualClassificationOutputType">
            	<xsd:sequence>
            		<xsd:element name="TotalRecords"
            			type="tns:LongType">
            		</xsd:element>
            		<xsd:element name="ClassifiedRecords"
            			type="tns:LongType">
            		</xsd:element>

            		<xsd:element name="UnclassifiedRecords"
            			type="tns:LongType">
            		</xsd:element>
            		<xsd:element name="RecordsWithError" type="tns:LongType"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
             <xsd:element name="FireWorkflowInput"
            	type="tns:FireWorkflowInputType">
            </xsd:element>
            <xsd:complexType name="FireWorkflowInputType">
            	<xsd:sequence>
            		<xsd:element name="ProcessID" type="tns:StringType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="InDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="1">
            		</xsd:element>
            		<xsd:element name="LinkParentEvent"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="ParitioningKey"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="WorkflowPriority"
            			type="tns:LongType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType" maxOccurs="1" minOccurs="0"></xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="ExecutionMode"
            		type="tns:ExecutionModeType" default="ASYNCHR">
            	</xsd:attribute>
            </xsd:complexType>
            <xsd:element name="FireWorkflowOutput"
            	type="tns:FireWorkflowOutputType">
            </xsd:element>
            
            <xsd:complexType name="FireWorkflowOutputType">
            	<xsd:sequence>
            		<xsd:element name="InitiatedEventID"
            			type="tns:LongType">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
 
            <xsd:element name="ZipFilesInput" type="tns:ZipFilesInputType"> </xsd:element>
            
            <xsd:complexType name="ZipFilesInputType">
            	<xsd:sequence>
            		<xsd:element name="SourceDir" type="tns:StringType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="FileName" type="tns:StringType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="Todir" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="CreateDateDir"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="TofileExt" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="DeleteSource" type="tns:BoolType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="Recurse" type="tns:BoolType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RelativePath"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="ExecutionMode"
            		type="tns:ExecutionModeType" default="SYNCHR">
            	</xsd:attribute>
            </xsd:complexType>
            <xsd:element name="ZipFilesOutput"
            	type="tns:ZipFilesOutputType">
            </xsd:element>
            
            <xsd:complexType name="ZipFilesOutputType">
            	<xsd:sequence>
            		<xsd:element name="FileName"
            			type="tns:StringType">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
  
            <xsd:element name="UnZipFileInput"
            	type="tns:UnZipFileInputType">
            </xsd:element>
            <xsd:element name="UnZipFileOutput"
            	type="tns:UnZipFileOutputType">
            </xsd:element>
            
            <xsd:complexType name="UnZipFileInputType">
            	<xsd:sequence>
            		<xsd:element name="FileName" type="tns:StringType"
            			maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="Todir" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="CreateDateDir"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="DeleteSource" type="tns:BoolType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
              		<xsd:element name="RetainPaths" type="tns:BoolType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="ExecutionMode"
            		type="tns:ExecutionModeType" default="SYNCHR">
            	</xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="UnZipFileOutputType">
            	<xsd:sequence>
            		<xsd:element name="FileName"
            			type="tns:ArrayListType">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            <xsd:element name="RefreshSubset">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="in" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RefreshSubsetResponse">
            	<xsd:complexType>
            		<xsd:sequence>

            			<xsd:element name="out" type="xsd:string"></xsd:element>
            		</xsd:sequence>
            	</xsd:complexType>
            </xsd:element>
            <xsd:element name="RefreshSubsetInput"
            	type="tns:RefreshSubsetInputType">
            </xsd:element>
            <xsd:element name="RefreshSubsetOutput"
            	type="tns:RefreshSubsetOutputType">
            </xsd:element>
            
            <xsd:complexType name="RefreshSubsetInputType">
            	<xsd:sequence>
            		<xsd:element name="Subset" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="InDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
		
            <xsd:complexType name="RefreshSubsetOutputType">
            	<xsd:sequence>
            		<xsd:element name="StepID" type="tns:LongType"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
            
            <xsd:element name="ProcessExportArchiveInput"
            	type="tns:ProcessExportArchiveInputType">
            </xsd:element>
            <xsd:element name="ProcessExportArchiveOutput"
            	type="tns:ProcessExportArchiveOutputType">

            </xsd:element>


            <xsd:complexType name="ProcessExportArchiveInputType">
            	<xsd:sequence>
            		<xsd:element name="InDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="1">
            		</xsd:element>
            		<xsd:element name="ExportArchive"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="eventState"
            			type="tns:StringType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="ExecutionMode"
            		type="tns:ExecutionModeType" default="SYNCHR">
            	</xsd:attribute>
            </xsd:complexType>
		
            <xsd:complexType name="ProcessExportArchiveOutputType">
            	<xsd:sequence>
            		<xsd:element name="RecordsDataMetaInfo"
            			type="tns:StringType">
            		</xsd:element>
            		<xsd:element name="RelDataMetaInfo"
            			type="tns:StringType">
            		</xsd:element>
            		<xsd:element name="RelAttrDataMetaInfo"
            			type="tns:StringType">
            		</xsd:element>
            		<xsd:element name="ClassificationDataMetaInfo"
            			type="tns:StringType">
            		</xsd:element>
            		<xsd:element name="OutDocument"
            			type="tns:mlXMLDocumentType">
            		</xsd:element>
                    <xsd:element name="StepID" type="tns:LongType"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
                      
            <xsd:element name="AddressCleansingInput"
            	type="tns:AddressCleansingInputType">
            </xsd:element>
            
            <xsd:complexType name="AddressCleansingInputType">
            	<xsd:sequence>
            		<xsd:element name="InDocument"
            			type="tns:mlXMLDocumentType" maxOccurs="1"
            			minOccurs="1">
            		</xsd:element>
            		<xsd:element name="InRecordList"
            			type="tns:RecordListType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="MasterCatalog"
            			type="tns:StringType" maxOccurs="1" minOccurs="1">
            		</xsd:element>
            		<xsd:element name="Mode"
            			type="tns:CleansingModeType" maxOccurs="1"
            			minOccurs="0">
            		</xsd:element>
            		<xsd:element name="RejectInvalid"
            			type="tns:BoolType" maxOccurs="1" minOccurs="0">
            		</xsd:element>
            		<xsd:element name="VersionPolicy"
            			type="tns:VersionPolicyType" maxOccurs="1"
            			minOccurs="0" default="New">
            		</xsd:element>
            		<xsd:element name="eventState" type="tns:StringType"
            			maxOccurs="1" minOccurs="0">
            		</xsd:element>
            	</xsd:sequence>
            	<xsd:attribute name="ExecutionMode"
            		type="tns:ExecutionModeType">
            	</xsd:attribute>
            </xsd:complexType>
		
            <xsd:simpleType name="CleansingModeValueType">
            	<xsd:restriction base="xsd:string">
            		<xsd:enumeration value="FORWARD"/>
            		<xsd:enumeration value="REVERSE"/>
            	</xsd:restriction>
            </xsd:simpleType>
            <xsd:complexType name="CleansingModeType">
				<xsd:simpleContent>
					<xsd:extension base="tns:CleansingModeValueType">
						<xsd:attribute name="eval" type="xsd:string"/>
						<xsd:attribute name="source" type="xsd:string"/>
						<xsd:attribute name="type" type="xsd:string"/>
					</xsd:extension>
				</xsd:simpleContent>
			</xsd:complexType>
            <xsd:element name="AddressCleansingOutput"
            	type="tns:AddressCleansingOutputType">
            </xsd:element>
            
            <xsd:complexType name="AddressCleansingOutputType">
            	<xsd:sequence>
            		<xsd:element name="OutRecordList"
            			type="tns:RecordListType">
            		</xsd:element>
            		<xsd:element name="OutRecordList2"
            			type="tns:RecordListType">
            		</xsd:element>
            		<xsd:element name="StepID" type="tns:LongType"></xsd:element>
            	</xsd:sequence>
            </xsd:complexType>
		</xsd:schema>
	</wsdl:types>
	
	<wsdl:message name="UpdateRecordStateRequest">
		<wsdl:part element="tns:UpdateRecordStateInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="UpdateRecordStateResponse">
		<wsdl:part element="tns:UpdateRecordStateOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="UpdateEventRequest">
		<wsdl:part element="tns:UpdateEventInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="UpdateEventResponse">
		<wsdl:part element="tns:UpdateEventOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SendRequest">
		<wsdl:part element="tns:SendInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SendResponse">
		<wsdl:part element="tns:SendOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="EvaluateSubsetRequest">
		<wsdl:part element="tns:EvaluateSubsetInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="EvaluateSubsetResponse">
		<wsdl:part element="tns:EvaluateSubsetOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SampleRequest">
		<wsdl:part element="tns:SampleInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SampleResponse">
		<wsdl:part element="tns:SampleOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CheckMessageStatusRequest">
		<wsdl:part element="tns:CheckMessageStatusInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CheckMessageStatusResponse">
		<wsdl:part element="tns:CheckMessageStatusOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CheckRecordInWorkflowRequest">
		<wsdl:part element="tns:CheckRecordInWorkflowInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CheckRecordInWorkflowResponse">
		<wsdl:part element="tns:CheckRecordInWorkflowOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CompareRecordRequest">
		<wsdl:part element="tns:CompareRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CompareRecordResponse">
		<wsdl:part element="tns:CompareRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ConvertRecordToOutputRequest">
		<wsdl:part element="tns:ConvertRecordToOutputInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ConvertRecordToOutputResponse">
		<wsdl:part element="tns:ConvertRecordToOutputOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CreateOutputFileRequest">
		<wsdl:part element="tns:CreateOutputFileInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CreateOutputFileResponse">
		<wsdl:part element="tns:CreateOutputFileOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CreateWorkItemRequest">
		<wsdl:part element="tns:CreateWorkItemInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CreateWorkItemResponse">
		<wsdl:part element="tns:CreateWorkItemOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="DeleteRecordRequest">
		<wsdl:part element="tns:DeleteRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="DeleteRecordResponse">
		<wsdl:part element="tns:DeleteRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="DuplicateMessageCheckRequest">
		<wsdl:part element="tns:DuplicateMessageCheckInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="DuplicateMessageCheckResponse">
		<wsdl:part element="tns:DuplicateMessageCheckOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="EvaluateRuleBaseRequest">
		<wsdl:part element="tns:EvaluateRuleBaseInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="EvaluateRuleBaseResponse">
		<wsdl:part element="tns:EvaluateRuleBaseOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ExecuteExternalCommandRequest">
		<wsdl:part element="tns:ExecuteExternalCommandInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ExecuteExternalCommandResponse">
		<wsdl:part element="tns:ExecuteExternalCommandOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetRecordRequest">
		<wsdl:part element="tns:GetRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetRecordResponse">
		<wsdl:part element="tns:GetRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetSyncStatusRequest">
		<wsdl:part element="tns:GetSyncStatusInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="GetSyncStatusResponse">
		<wsdl:part element="tns:GetSyncStatusOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="HandleMessagingRequest">
		<wsdl:part element="tns:HandleMessagingInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="HandleMessagingResponse">
		<wsdl:part element="tns:HandleMessagingOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="IdentifyActionTypeRequest">
		<wsdl:part element="tns:IdentifyActionTypeInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="IdentifyActionTypeResponse">
		<wsdl:part element="tns:IdentifyActionTypeOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="IdentifyProtocolOperationsRequest">
		<wsdl:part element="tns:IdentifyProtocolOperationsInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="IdentifyProtocolOperationsResponse">
		<wsdl:part element="tns:IdentifyProtocolOperationsOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="IdentifyRecordVersionsRequest">
		<wsdl:part element="tns:IdentifyRecordVersionsInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="IdentifyRecordVersionsResponse">
		<wsdl:part element="tns:IdentifyRecordVersionsOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ImportCatalogRequest">
		<wsdl:part element="tns:ImportCatalogInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ImportCatalogResponse">
		<wsdl:part element="tns:ImportCatalogOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ImportClassificationSchemeRequest">
		<wsdl:part element="tns:ImportClassificationSchemeInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ImportClassificationSchemeResponse">
		<wsdl:part element="tns:ImportClassificationSchemeOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="InitiateSubFlowRequest">
		<wsdl:part element="tns:InitiateSubFlowInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="InitiateSubFlowResponse">
		<wsdl:part element="tns:InitiateSubFlowOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="InitiateWorkflowRequest">
		<wsdl:part element="tns:InitiateWorkflowInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="InitiateWorkflowResponse">
		<wsdl:part element="tns:InitiateWorkflowResponse" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="InterpretCommandRequest">
		<wsdl:part element="tns:InterpretCommandInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="InterpretCommandResponse">
		<wsdl:part element="tns:InterpretCommandOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="JoinExistingWorkflowRequest">
		<wsdl:part element="tns:JoinExistingWorkflowInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="JoinExistingWorkflowResponse">
		<wsdl:part element="tns:JoinExistingWorkflowOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ManageRecordCollectionRequest">
		<wsdl:part element="tns:ManageRecordCollectionInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ManageRecordCollectionResponse">
		<wsdl:part element="tns:ManageRecordCollectionOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ManageWorkItemRequest">
		<wsdl:part element="tns:ManageWorkItemInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ManageWorkItemResponse">
		<wsdl:part element="tns:ManageWorkItemOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="MatchRecordRequest">
		<wsdl:part element="tns:MatchRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="MatchRecordResponse">
		<wsdl:part element="tns:MatchRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="MergeRecordRequest">
		<wsdl:part element="tns:MergeRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="MergeRecordResponse">
		<wsdl:part element="tns:MergeRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="MergeFormRequest">
		<wsdl:part element="tns:MergeFormInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="MergeFormResponse">
		<wsdl:part element="tns:MergeFormOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="NoOperationRequest">
		<wsdl:part element="tns:NoOperationInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="NoOperationResponse">
		<wsdl:part element="tns:NoOperationOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ProcessServiceMessageRequest">
		<wsdl:part element="tns:ProcessServiceMessageInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ProcessServiceMessageResponse">
		<wsdl:part element="tns:ProcessServiceMessageOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="PurgeRequest">
		<wsdl:part element="tns:PurgeInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="PurgeResponse">
		<wsdl:part element="tns:PurgeOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="AdvancedPurgeRequest">
		<wsdl:part element="tns:AdvancedPurgeInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="AdvancedPurgeResponse">
		<wsdl:part element="tns:AdvancedPurgeOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ReclassifyRecordRequest">
		<wsdl:part element="tns:ReclassifyRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ReclassifyRecordResponse">
		<wsdl:part element="tns:ReclassifyRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SaveRecordRequest">
		<wsdl:part element="tns:SaveRecordInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SaveRecordResponse">
		<wsdl:part element="tns:SaveRecordOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SendProtocolMessageRequest">
		<wsdl:part element="tns:SendProtocolMessageInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SendProtocolMessageResponse">
		<wsdl:part element="tns:SendProtocolMessageOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SpawnWorkflowRequest">
		<wsdl:part element="tns:SpawnWorkflowInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="SpawnWorkflowResponse">
		<wsdl:part element="tns:SpawnWorkflowOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="StateTransitionRequest">
		<wsdl:part element="tns:StateTransitionInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="StateTransitionResponse">
		<wsdl:part element="tns:StateTransitionOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="TranslateRequest">
		<wsdl:part element="tns:TranslateInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="TranslateResponse">
		<wsdl:part element="tns:TranslateOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="UploadDataSourceRequest">
		<wsdl:part element="tns:UploadDataSourceInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="UploadDataSourceResponse">
		<wsdl:part element="tns:UploadDataSourceOutput" name="parameters"/>
	</wsdl:message>

	<wsdl:message name="ValidateDocumentRequest">
		<wsdl:part element="tns:ValidateDocumentInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="ValidateDocumentResponse">
		<wsdl:part element="tns:ValidateDocumentOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="VerifyPartnerRequest">
		<wsdl:part element="tns:VerifyPartnerInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="VerifyPartnerResponse">
		<wsdl:part element="tns:VerifyPartnerOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="VerifyRecordStatusRequest">
		<wsdl:part element="tns:VerifyRecordStatusInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="VerifyRecordStatusResponse">
		<wsdl:part element="tns:VerifyRecordStatusOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="WaitForResponseRequest">
		<wsdl:part element="tns:WaitForResponseInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="WaitForResponseResponse">
		<wsdl:part element="tns:WaitForResponseOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CheckpointWorkflowRequest">
		<wsdl:part element="tns:CheckpointWorkflowInput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="CheckpointWorkflowResponse">
		<wsdl:part element="tns:CheckpointWorkflowOutput" name="parameters"/>
	</wsdl:message>
	<wsdl:message name="testOperationRequest">
		<wsdl:part name="parameters" element="tns:testOperationInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="testOperationResponse">
		<wsdl:part name="parameters" element="tns:testOperationResponse"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="PrepareForImportCatalogRequest">
		<wsdl:part name="parameters"
			element="tns:PrepareForImportCatalogInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="PrepareForImportCatalogResponse">
		<wsdl:part name="parameters"
			element="tns:PrepareForImportCatalogOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExtractRelationshipRequest">
		<wsdl:part name="parameters"
			element="tns:ExtractRelationshipInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExtractRelationshipResponse">
		<wsdl:part name="parameters"
			element="tns:ExtractRelationshipOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ImportCatalogRecordsRequest">
		<wsdl:part name="parameters"
			element="tns:ImportCatalogRecordsInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ImportCatalogRecordsResponse">
		<wsdl:part name="parameters"
			element="tns:ImportCatalogRecordsOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="EvaluateMassupdateRulebaseRequest">
		<wsdl:part name="parameters"
			element="tns:EvaluateMassupdateRulebaseInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="EvaluateMassupdateRulebaseResponse">
		<wsdl:part name="parameters"
			element="tns:EvaluateMassupdateRulebaseOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GenerateReportForSDDRequest">
		<wsdl:part name="parameters"
			element="tns:GenerateReportForSDDInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="GenerateReportForSDDResponse">
		<wsdl:part name="parameters" element="tns:GenerateReportForSDDOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExtractDataToDelimitedFileRequest">
		<wsdl:part name="parameters"
			element="tns:ExtractDataToDelimitedFileInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="ExtractDataToDelimitedFileResponse">
		<wsdl:part name="parameters"
			element="tns:ExtractDataToDelimitedFileOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CreateNamedVersionRequest">
		<wsdl:part name="parameters"
			element="tns:CreateNamedVersionInput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="CreateNamedVersionResponse">
		<wsdl:part name="parameters"
			element="tns:CreateNamedVersionOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="PurgeStagingRequest">
		<wsdl:part name="parameters" element="tns:PurgeStagingInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="PurgeStagingResponse">
		<wsdl:part name="parameters" element="tns:PurgeStagingOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetAssocEventsSummaryRequest">
		<wsdl:part name="parameters" element="tns:GetAssocEventsSummaryInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="GetAssocEventsSummaryResponse">
		<wsdl:part name="parameters" element="tns:GetAssocEventsSummaryOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="RestartEventRequest">
		<wsdl:part name="parameters" element="tns:RestartEventInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="RestartEventResponse">
		<wsdl:part name="parameters" element="tns:RestartEventOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="SuspendWorkflowRequest">
		<wsdl:part name="parameters" element="tns:SuspendWorkflowInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="SuspendWorkflowResponse">
		<wsdl:part name="parameters" element="tns:SuspendWorkflowOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="SleepRequest">
		<wsdl:part name="parameters" element="tns:SleepInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="SleepResponse">
		<wsdl:part name="parameters" element="tns:SleepOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="UndoEventRequest">
		<wsdl:part name="parameters" element="tns:UndoEventInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="UndoEventResponse">
		<wsdl:part name="parameters" element="tns:UndoEventOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ManualClassificationRequest">
		<wsdl:part name="parameters" element="tns:ManualClassificationInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ManualClassificationResponse">
		<wsdl:part name="parameters"
			element="tns:ManualClassificationOutput">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="FireWorkflowRequest">
		<wsdl:part name="parameters" element="tns:FireWorkflowInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="FireWorkflowResponse">
		<wsdl:part name="parameters" element="tns:FireWorkflowOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ZipFilesRequest">
		<wsdl:part name="parameters" element="tns:ZipFilesInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ZipFilesResponse">
		<wsdl:part name="parameters" element="tns:ZipFilesOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="UnZipFileRequest">
		<wsdl:part name="parameters" element="tns:UnZipFileInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="UnZipFileResponse">
		<wsdl:part name="parameters" element="tns:UnZipFileOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="RefreshSubsetRequest">
		<wsdl:part name="parameters" element="tns:RefreshSubsetInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="RefreshSubsetResponse">
		<wsdl:part name="parameters" element="tns:RefreshSubsetOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ProcessExportArchiveRequest">
		<wsdl:part name="parameters" element="tns:ProcessExportArchiveInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="ProcessExportArchiveResponse">
		<wsdl:part name="parameters" element="tns:ProcessExportArchiveOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddressCleansingRequest">
		<wsdl:part name="parameters" element="tns:AddressCleansingInput"></wsdl:part>
	</wsdl:message>
	<wsdl:message name="AddressCleansingResponse">
		<wsdl:part name="parameters" element="tns:AddressCleansingOutput"></wsdl:part>
	</wsdl:message>
	<wsdl:portType name="CimActivities">
		<wsdl:operation name="ManageWorkItem">
			<wsdl:input message="tns:ManageWorkItemRequest"/>
			<wsdl:output message="tns:ManageWorkItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="UpdateRecordState">
			<wsdl:input message="tns:UpdateRecordStateRequest"/>
			<wsdl:output message="tns:UpdateRecordStateResponse"/>
		</wsdl:operation>
		<wsdl:operation name="UpdateEvent">
			<wsdl:input message="tns:UpdateEventRequest"/>
			<wsdl:output message="tns:UpdateEventResponse"/>
		</wsdl:operation>
		<wsdl:operation name="Send">
			<wsdl:input message="tns:SendRequest"/>
			<wsdl:output message="tns:SendResponse"/>
		</wsdl:operation>
		<wsdl:operation name="EvaluateSubset">
			<wsdl:input message="tns:EvaluateSubsetRequest"/>
			<wsdl:output message="tns:EvaluateSubsetResponse"/>
		</wsdl:operation>
		<wsdl:operation name="Sample">
			<wsdl:input message="tns:SampleRequest"/>
			<wsdl:output message="tns:SampleResponse"/>
		</wsdl:operation>
		<wsdl:operation name="CheckMessageStatus">
			<wsdl:input message="tns:CheckMessageStatusRequest"/>
			<wsdl:output message="tns:CheckMessageStatusResponse"/>
		</wsdl:operation>
		<wsdl:operation name="CheckRecordInWorkflow">
			<wsdl:input message="tns:CheckRecordInWorkflowRequest"/>
			<wsdl:output message="tns:CheckRecordInWorkflowResponse"/>
		</wsdl:operation>
		<wsdl:operation name="CompareRecord">
			<wsdl:input message="tns:CompareRecordRequest"/>
			<wsdl:output message="tns:CompareRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ConvertRecordToOutput">
			<wsdl:input message="tns:ConvertRecordToOutputRequest"/>
			<wsdl:output message="tns:ConvertRecordToOutputResponse"/>
		</wsdl:operation>
		<wsdl:operation name="CreateOutputFile">
			<wsdl:input message="tns:CreateOutputFileRequest"/>
			<wsdl:output message="tns:CreateOutputFileResponse"/>
		</wsdl:operation>
		<wsdl:operation name="CreateWorkItem">
			<wsdl:input message="tns:CreateWorkItemRequest"/>
			<wsdl:output message="tns:CreateWorkItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="DeleteRecord">
			<wsdl:input message="tns:DeleteRecordRequest"/>
			<wsdl:output message="tns:DeleteRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="DuplicateMessageCheck">
			<wsdl:input message="tns:DuplicateMessageCheckRequest"/>
			<wsdl:output message="tns:DuplicateMessageCheckResponse"/>
		</wsdl:operation>
		<wsdl:operation name="EvaluateRuleBase">
			<wsdl:input message="tns:EvaluateRuleBaseRequest"/>
			<wsdl:output message="tns:EvaluateRuleBaseResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ExecuteExternalCommand">
			<wsdl:input message="tns:ExecuteExternalCommandRequest"/>
			<wsdl:output message="tns:ExecuteExternalCommandResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetRecord">
			<wsdl:input message="tns:GetRecordRequest"/>
			<wsdl:output message="tns:GetRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSyncStatus">
			<wsdl:input message="tns:GetSyncStatusRequest"/>
			<wsdl:output message="tns:GetSyncStatusResponse"/>
		</wsdl:operation>
		<wsdl:operation name="HandleMessaging">
			<wsdl:input message="tns:HandleMessagingRequest"/>
			<wsdl:output message="tns:HandleMessagingResponse"/>
		</wsdl:operation>
		<wsdl:operation name="IdentifyActionType">
			<wsdl:input message="tns:IdentifyActionTypeRequest"/>
			<wsdl:output message="tns:IdentifyActionTypeResponse"/>
		</wsdl:operation>
		<wsdl:operation name="IdentifyProtocolOperations">
			<wsdl:input message="tns:IdentifyProtocolOperationsRequest"/>
			<wsdl:output message="tns:IdentifyProtocolOperationsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="IdentifyRecordVersions">
			<wsdl:input message="tns:IdentifyRecordVersionsRequest"/>
			<wsdl:output message="tns:IdentifyRecordVersionsResponse"/>
		</wsdl:operation>

		<wsdl:operation name="ImportClassificationScheme">
			<wsdl:input message="tns:ImportClassificationSchemeRequest"/>
			<wsdl:output message="tns:ImportClassificationSchemeResponse"/>
		</wsdl:operation>
		<wsdl:operation name="InitiateSubFlow">
			<wsdl:input message="tns:InitiateSubFlowRequest"/>
			<wsdl:output message="tns:InitiateSubFlowResponse"/>
		</wsdl:operation>
		<wsdl:operation name="InitiateWorkflow">
			<wsdl:input message="tns:InitiateWorkflowRequest"/>
			<wsdl:output message="tns:InitiateWorkflowResponse"/>
		</wsdl:operation>
		<wsdl:operation name="InterpretCommand">
			<wsdl:input message="tns:InterpretCommandRequest"/>
			<wsdl:output message="tns:InterpretCommandResponse"/>
		</wsdl:operation>
		<wsdl:operation name="JoinExistingWorkflow">
			<wsdl:input message="tns:JoinExistingWorkflowRequest"/>
			<wsdl:output message="tns:JoinExistingWorkflowResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ManageRecordCollection">
			<wsdl:input message="tns:ManageRecordCollectionRequest"/>
			<wsdl:output message="tns:ManageRecordCollectionResponse"/>
		</wsdl:operation>
		<wsdl:operation name="MatchRecord">
			<wsdl:input message="tns:MatchRecordRequest"/>
			<wsdl:output message="tns:MatchRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="MergeRecord">
			<wsdl:input message="tns:MergeRecordRequest"/>
			<wsdl:output message="tns:MergeRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="MergeForm">
			<wsdl:input message="tns:MergeFormRequest"/>
			<wsdl:output message="tns:MergeFormResponse"/>
		</wsdl:operation>
		<wsdl:operation name="NoOperation">
			<wsdl:input message="tns:NoOperationRequest"/>
			<wsdl:output message="tns:NoOperationResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ProcessServiceMessage">
			<wsdl:input message="tns:ProcessServiceMessageRequest"/>
			<wsdl:output message="tns:ProcessServiceMessageResponse"/>
		</wsdl:operation>
		<wsdl:operation name="Purge">
			<wsdl:input message="tns:PurgeRequest"/>
			<wsdl:output message="tns:PurgeResponse"/>
		</wsdl:operation>

		<wsdl:operation name="ReclassifyRecord">
			<wsdl:input message="tns:ReclassifyRecordRequest"/>
			<wsdl:output message="tns:ReclassifyRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SaveRecord">
			<wsdl:input message="tns:SaveRecordRequest"/>
			<wsdl:output message="tns:SaveRecordResponse"/>
		</wsdl:operation>
		<wsdl:operation name="SendProtocolMessage">
			<wsdl:input message="tns:SendProtocolMessageRequest"/>
			<wsdl:output message="tns:SendProtocolMessageResponse"/>
		</wsdl:operation>

		<wsdl:operation name="SpawnWorkflow">
			<wsdl:input message="tns:SpawnWorkflowRequest"/>
			<wsdl:output message="tns:SpawnWorkflowResponse"/>
		</wsdl:operation>
		<wsdl:operation name="StateTransition">
			<wsdl:input message="tns:StateTransitionRequest"/>
			<wsdl:output message="tns:StateTransitionResponse"/>
		</wsdl:operation>
		<wsdl:operation name="Translate">
			<wsdl:input message="tns:TranslateRequest"/>
			<wsdl:output message="tns:TranslateResponse"/>
		</wsdl:operation>
		<wsdl:operation name="UploadDataSource">
			<wsdl:input message="tns:UploadDataSourceRequest"/>
			<wsdl:output message="tns:UploadDataSourceResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ValidateDocument">
			<wsdl:input message="tns:ValidateDocumentRequest"/>
			<wsdl:output message="tns:ValidateDocumentResponse"/>
		</wsdl:operation>
		<wsdl:operation name="VerifyPartner">
			<wsdl:input message="tns:VerifyPartnerRequest"/>
			<wsdl:output message="tns:VerifyPartnerResponse"/>
		</wsdl:operation>
		<wsdl:operation name="VerifyRecordStatus">
			<wsdl:input message="tns:VerifyRecordStatusRequest"/>
			<wsdl:output message="tns:VerifyRecordStatusResponse"/>
		</wsdl:operation>
		<wsdl:operation name="WaitForResponse">
			<wsdl:input message="tns:WaitForResponseRequest"/>
			<wsdl:output message="tns:WaitForResponseResponse"/>
		</wsdl:operation>
		<wsdl:operation name="CheckpointWorkflow">
			<wsdl:input message="tns:CheckpointWorkflowRequest"/>
			<wsdl:output message="tns:CheckpointWorkflowResponse"/>
		</wsdl:operation>

		<wsdl:operation name="PrepareForImportCatalog">
			<wsdl:input message="tns:PrepareForImportCatalogRequest"></wsdl:input>
			<wsdl:output message="tns:PrepareForImportCatalogResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ExtractRelationship">
			<wsdl:input message="tns:ExtractRelationshipRequest"></wsdl:input>
			<wsdl:output message="tns:ExtractRelationshipResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ImportCatalogRecords">
			<wsdl:input message="tns:ImportCatalogRecordsRequest"></wsdl:input>
			<wsdl:output message="tns:ImportCatalogRecordsResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="EvaluateMassupdateRulebase">
			<wsdl:input message="tns:EvaluateMassupdateRulebaseRequest"></wsdl:input>
			<wsdl:output message="tns:EvaluateMassupdateRulebaseResponse"></wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="GenerateReportForSDD">
			<wsdl:input message="tns:GenerateReportForSDDRequest"></wsdl:input>
			<wsdl:output message="tns:GenerateReportForSDDResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ExtractDataToDelimitedFile">
			<wsdl:input message="tns:ExtractDataToDelimitedFileRequest"></wsdl:input>
			<wsdl:output message="tns:ExtractDataToDelimitedFileResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CreateNamedVersion">
			<wsdl:input message="tns:CreateNamedVersionRequest"></wsdl:input>
			<wsdl:output message="tns:CreateNamedVersionResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="PurgeStaging">
			<wsdl:input message="tns:PurgeStagingRequest"></wsdl:input>
			<wsdl:output message="tns:PurgeStagingResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAssocEventsSummary">
			<wsdl:input message="tns:GetAssocEventsSummaryRequest"></wsdl:input>
			<wsdl:output message="tns:GetAssocEventsSummaryResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="RestartEvent">
			<wsdl:input message="tns:RestartEventRequest"></wsdl:input>
			<wsdl:output message="tns:RestartEventResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SuspendWorkflow">
			<wsdl:input message="tns:SuspendWorkflowRequest"></wsdl:input>
			<wsdl:output message="tns:SuspendWorkflowResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Sleep">
			<wsdl:input message="tns:SleepRequest"></wsdl:input>
			<wsdl:output message="tns:SleepResponse"></wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="UndoEvent">
			<wsdl:input message="tns:UndoEventRequest"></wsdl:input>
			<wsdl:output message="tns:UndoEventResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ManualClassification">
			<wsdl:input message="tns:ManualClassificationRequest"></wsdl:input>
			<wsdl:output message="tns:ManualClassificationResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FireWorkflow">
			<wsdl:input message="tns:FireWorkflowRequest"></wsdl:input>
			<wsdl:output message="tns:FireWorkflowResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ZipFiles">
			<wsdl:input message="tns:ZipFilesRequest"></wsdl:input>
			<wsdl:output message="tns:ZipFilesResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="UnZipFile">
			<wsdl:input message="tns:UnZipFileRequest"></wsdl:input>
			<wsdl:output message="tns:UnZipFileResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="RefreshSubset">
			<wsdl:input message="tns:RefreshSubsetRequest"></wsdl:input>
			<wsdl:output message="tns:RefreshSubsetResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ProcessExportArchive">
			<wsdl:input message="tns:ProcessExportArchiveRequest"></wsdl:input>
			<wsdl:output message="tns:ProcessExportArchiveResponse"></wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddressCleansing">
			<wsdl:input message="tns:AddressCleansingRequest"></wsdl:input>
			<wsdl:output message="tns:AddressCleansingResponse"></wsdl:output>
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:binding name="CIMserviceHttpBinding"
		type="tns:CimActivities">

		<soap:binding style="document"
			transport="http://schemas.xmlsoap.org/soap/http" />
		<wsdl:operation name="ManageWorkItem">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ManageWorkItem" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="UpdateRecordState">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/UpdateRecordState" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="UpdateEvent">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/UpdateEvent" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Send">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/Send" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="EvaluateSubset">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/EvaluateSubset" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Sample">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/Sample" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CheckMessageStatus">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CheckMessageStatus" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CheckRecordInWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CheckRecordInWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CompareRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CompareRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ConvertRecordToOutput">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ConvertRecordToOutput" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CreateOutputFile">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CreateOutputFile" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CreateWorkItem">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CreateWorkItem" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="DeleteRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/DeleteRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="DuplicateMessageCheck">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/DuplicateMessageCheck" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="EvaluateRuleBase">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/EvaluateRuleBase" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ExecuteExternalCommand">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ExecuteExternalCommand" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/GetRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSyncStatus">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/GetSyncStatus" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="HandleMessaging">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/HandleMessaging" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="IdentifyActionType">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/IdentifyActionType" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="IdentifyProtocolOperations">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/IdentifyProtocolOperations" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="IdentifyRecordVersions">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/IdentifyRecordVersions" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="ImportClassificationScheme">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ImportClassificationScheme" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="InitiateSubFlow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/InitiateSubFlow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="InitiateWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/InitiateWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="InterpretCommand">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/InterpretCommand" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="JoinExistingWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/JoinExistingWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ManageRecordCollection">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ManageRecordCollection" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="MatchRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/MatchRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="MergeRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/MergeRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="MergeForm">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/MergeForm" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="NoOperation">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/NoOperation" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ProcessServiceMessage">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ProcessServiceMessage" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Purge">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/Purge" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="ReclassifyRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ReclassifyRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SaveRecord">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/SaveRecord" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SendProtocolMessage">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/SendProtocolMessage" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SpawnWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/SpawnWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="StateTransition">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/StateTransition" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Translate">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/Translate" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="UploadDataSource">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/UploadDataSource" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ValidateDocument">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ValidateDocument" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="VerifyPartner">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/VerifyPartner" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="VerifyRecordStatus">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/VerifyRecordStatus" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="WaitForResponse">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/WaitForResponse" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CheckpointWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CheckpointWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="PrepareForImportCatalog">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/PrepareForImportCatalog" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ExtractRelationship">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ExtractRelationship" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ImportCatalogRecords">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ImportCatalogRecords" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="EvaluateMassupdateRulebase">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/EvaluateMassupdateRulebase" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GenerateReportForSDD">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/GenerateReportForSDD" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ExtractDataToDelimitedFile">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ExtractDataToDelimitedFile" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="CreateNamedVersion">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/CreateNamedVersion" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="PurgeStaging">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/PurgeStaging" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAssocEventsSummary">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/GetAssocEventsSummary" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="RestartEvent">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/RestartEvent" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="SuspendWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/SuspendWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Sleep">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/Sleep" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="UndoEvent">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/UndoEvent" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ManualClassification">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ManualClassification" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="FireWorkflow">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/FireWorkflow" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ZipFiles">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ZipFiles" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="UnZipFile">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/UnZipFile" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="RefreshSubset">

			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/RefreshSubset" />
			<wsdl:input>

				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>

				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ProcessExportArchive">
			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/ProcessExportArchive" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>

		<wsdl:operation name="AddressCleansing">
			<soap:operation
				soapAction="http://www.tibco.com/cim/services/wfactivities/1.0/AddressCleansing" />
			<wsdl:input>
				<soap:body use="literal" />
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal" />
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="CimService">
		<wsdl:port binding="tns:CIMserviceHttpBinding" name="CimServicePort">
			<soap:address location="http://www.tibco.com/cim/services/wfactivities/1.0"/>
		</wsdl:port>
	</wsdl:service>

</wsdl:definitions>
